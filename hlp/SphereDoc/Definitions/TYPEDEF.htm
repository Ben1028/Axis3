<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.14.0" />
		<meta name="keywords" content="TYPEDEF,De:TYPEDEF,En:TYPEDEF,TYPEDEF,Es:TYPEDEF,Fr:TYPEDEF,Ja:TYPEDEF,Tr:TYPEDEF,EVENTS,ITEMDEF,Items" />
		<link rel="alternate" type="application/x-wiki" title="Edit" href="http://wiki.sphere.torfo.org/index.php?title=TYPEDEF&amp;action=edit" />
		<link rel="edit" title="Edit" href="http://wiki.sphere.torfo.org/index.php?title=TYPEDEF&amp;action=edit" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/opensearch_desc.php" title="SphereWiki (en)" />
		<link rel="alternate" type="application/rss+xml" title="SphereWiki RSS Feed" href="http://wiki.sphere.torfo.org/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="SphereWiki Atom Feed" href="http://wiki.sphere.torfo.org/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>TYPEDEF - SphereWiki</title>
		<link rel="stylesheet" href="/skins/common/shared.css?195" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins/common/commonPrint.css?195" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins/monobook/main.css?195" type="text/css" media="screen" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins/monobook/IE50Fixes.css?195" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins/monobook/IE55Fixes.css?195" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins/monobook/IE60Fixes.css?195" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins/monobook/IE70Fixes.css?195" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=18000&amp;action=raw&amp;maxage=18000" type="text/css" />
		<link rel="stylesheet" href="/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=18000&amp;action=raw&amp;maxage=18000" type="text/css" media="print" />
		<link rel="stylesheet" href="/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=18000&amp;action=raw&amp;maxage=18000" type="text/css" />
		<link rel="stylesheet" href="/index.php?title=-&amp;action=raw&amp;maxage=18000&amp;smaxage=0&amp;ts=20120630142713&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins/common/IEFixes.js?195"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins";
		var wgArticlePath = "/index.php/$1";
		var wgScriptPath = "";
		var wgScript = "/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://wiki.sphere.torfo.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "TYPEDEF";
		var wgTitle = "TYPEDEF";
		var wgAction = "view";
		var wgArticleId = "77";
		var wgIsArticle = true;
		var wgUserName = "Ben";
		var wgUserGroups = ["*", "user", "autoconfirmed"];
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = "841";
		var wgVersion = "1.14.0";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		var wgAjaxWatch = {"watchMsg": "Watch", "unwatchMsg": "Unwatch", "watchingMsg": "Watching...", "unwatchingMsg": "Unwatching..."};
		/*]]>*/</script>

		<script type="text/javascript" src="/skins/common/wikibits.js?195"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins/common/ajax.js?195"></script>
		<script type="text/javascript" src="/skins/common/ajaxwatch.js?195"></script>
		<script type="text/javascript" src="/index.php?title=-&amp;action=raw&amp;smaxage=0&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-TYPEDEF skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
				<h1 id="firstHeading" class="firstHeading">TYPEDEF</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From SphereWiki</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<div style="margin: 0px; padding: 2px 2px 0px 2px; border: none; border-collapse:collapse; clear:both;">
<span style="float:right; font-weight:normal; font-size: x-small;"><a href="/index.php/Wiki_Translation" title="Wiki Translation">Help</a></span><div style="background-color:#e9e9e9; border-style:solid; border-width:1px; border-color:#aaa; padding: 0pt 4pt 8pt 4pt; font-size: 95%; text-align:center;"><b>Available languages</b></div>
<div style="border: 1px solid #aaa; background-color: #f9f9f9; border-collapse:collapse; font-size: 95%; padding: 2pt 4pt 2pt 4pt; margin: 0px;">          • <span lang="en"><strong class="selflink">English</strong></span>                                         
</div>
</div>
<div class="NavFrame" style="border:none; clear:none; margin: 0px; padding-top: 0px;">
<div class="NavHead" style="background-color:#e9e9e9; border-style:solid; border-width:1px; border-color:#aaa; margin: 0px; padding: 0pt 4pt 8pt 4pt; font-size: 95%;"><b>Missing languages</b></div>
<div class="NavContent" style="border: 1px solid #aaa; background-color: #f9f9f9; border-collapse:collapse; font-size: 95%; padding: 2pt 4pt 2pt 4pt;">        • <span lang="de"><a href="/index.php?title=De:TYPEDEF&amp;action=edit&amp;redlink=1" class="new" title="De:TYPEDEF (page does not exist)">Deutsch</a></span>    • <span lang="es"><a href="/index.php?title=Es:TYPEDEF&amp;action=edit&amp;redlink=1" class="new" title="Es:TYPEDEF (page does not exist)">Español</a></span>    • <span lang="fr"><a href="/index.php?title=Fr:TYPEDEF&amp;action=edit&amp;redlink=1" class="new" title="Fr:TYPEDEF (page does not exist)">Français</a></span>           • <span lang="ja"><a href="/index.php?title=Ja:TYPEDEF&amp;action=edit&amp;redlink=1" class="new" title="Ja:TYPEDEF (page does not exist)">日本語</a></span>                  • <span lang="tr"><a href="/index.php?title=Tr:TYPEDEF&amp;action=edit&amp;redlink=1" class="new" title="Tr:TYPEDEF (page does not exist)">Türkçe</a></span>     
</div>
</div><div class="NavFrame" style="border:none;display:none;"></div>
<p><br />
</p><p>Type definitions are the equivalent of <a href="/index.php/EVENTS" title="EVENTS">EVENTS</a> that can be attached to <a href="/index.php/Items" title="Items">items</a>. There are different properties that can be used to attach a type block to an item or set of items:
</p>
<ul><li> <a href="/index.php/ITEMDEF" title="ITEMDEF">item definitions</a> via their <a href="/index.php?title=TYPE&amp;action=edit&amp;redlink=1" class="new" title="TYPE (page does not exist)">TYPE</a> and/or <a href="/index.php?title=TEVENTS&amp;action=edit&amp;redlink=1" class="new" title="TEVENTS (page does not exist)">TEVENTS</a> property.
</li><li> <a href="/index.php/Items" title="Items">items</a> via their <a href="/index.php?title=TYPE&amp;action=edit&amp;redlink=1" class="new" title="TYPE (page does not exist)">TYPE</a> and/or <a href="/index.php?title=EVENTS_(Property)&amp;action=edit&amp;redlink=1" class="new" title="EVENTS (Property) (page does not exist)">EVENTS</a> property.
</li></ul>
<p><br />
In addition to handling triggers, type definitions can also be used to define different types of terrain. This can be used to affect the return value of the <a href="/index.php?title=TYPE&amp;action=edit&amp;redlink=1" class="new" title="TYPE (page does not exist)">TYPE</a> property on <a href="/index.php?title=Map_points&amp;action=edit&amp;redlink=1" class="new" title="Map points (page does not exist)">map points</a>, or for some hardcoded types such as t_rock it can be used to define which terrain IDs Sphere should consider to be rock when the mining skill is used.
</p>
<table id="toc" class="toc" summary="Contents"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1"><a href="#Built-in_Types"><span class="tocnumber">1</span> <span class="toctext">Built-in Types</span></a></li>
<li class="toclevel-1"><a href="#Scripted_TYPEDEFs"><span class="tocnumber">2</span> <span class="toctext">Scripted TYPEDEFs</span></a></li>
<li class="toclevel-1"><a href="#Syntax"><span class="tocnumber">3</span> <span class="toctext">Syntax</span></a></li>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">4</span> <span class="toctext">Examples</span></a></li>
</ul>
</td></tr></table><script type="text/javascript"> if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } </script>
<a name="Built-in_Types" id="Built-in_Types"></a><h2><span class="editsection">[<a href="/index.php?title=TYPEDEF&amp;action=edit&amp;section=1" title="Edit section: Built-in Types">edit</a>]</span> <span class="mw-headline">Built-in Types</span></h2>
<p>The built-in types are all listed in the sphere_defs.scp file.  The table below only lists some of the built-in types and it is VERY weak on actual details...so use with care.
</p>
<table border="1">
<tr>
<th> DEFNAME </th><th> Number </th><th> Description
</th></tr>
<tr>
<td> t_normal </td><td> 0 </td><td> No built-in behavior.
</td></tr>
<tr>
<td> t_container and t_container_locked </td><td> 1 and 2 </td><td> These types are used for containers.  They leverage the following properties:
<ul><li> MORE1 = "ID" from the key that can unlock this item (If the MORE1 of the key matches the MORE1 of the container then they are linked)
</li><li> MORE2 = The lock complexity (how hard it is to pick the lock)
</li><li> MOREX = The trap type (not used yet?)
</li><li> TDATA2 = The gumpID of the container (this is not an ITEMDEF)
</li><li> TDATA3 = The minimum gump size
</li><li> TDATA4 = The maximum gump size
</li><li> LINK = UID of a secondary key?
</li></ul>
</td></tr>
<tr>
<td> t_door or t_door_unlocked </td><td> 3 or 4 </td><td> This type is used for both locked and unlocked doors.  They leverage the following properties:
<ul><li> MORE1 = UID of this door's key (if it has one)
</li><li> TDATA1 = ID for the sound it makes when double clicked
</li></ul>
</td></tr>
<tr>
<td> t_key </td><td> 5 </td><td> This type is used for keys.  It leverages the following properties:
<ul><li> MORE1 = "ID" of the item(s) this key can unlock (if the MORE1 of the key matches the MORE1 of the container/door then they are linked)
</li><li> LINK = If this is set to the UID of a "multi" object (like a house) the key can open all doors/containers in that multi?
</li></ul>
<p><b>Note:</b> Keys, containers, and doors are interesting. If both a key and a door/container contain the same arbitrary MORE1 value, the key can be used to lock or unlock the door/container.  That action changes the TYPE of the door/container to indicate whether it is locked or not. It also seems like LINK on the key can be set to the UID of a multi so that it can be used to open all doors/containers inside that multi.
</p>
</td></tr>
<tr>
<td> t_light_lit </td><td> 6 </td><td> This type is used for light sources that can be turned on or off.  It leverages the following properties:
<ul><li> MOREY = Number of charges before the item is consumed
</li><li> MOREZ = Type of light pattern it will cast
</li></ul>
</td></tr>
<tr>
<td> t_light_out </td><td> 7 </td><td> This type is used for light sources that can be turned on or off.  It leverages the following properties:
<ul><li> MOREY = Number of charges before the item is consumed
</li><li> MOREZ = Type of light pattern it will cast
</li></ul>
</td></tr>
<tr>
<td> t_food </td><td> 8 </td><td> This type is used for edible food.  It leverages the following properties:
<ul><li> MORE2 = The ID of the creature that this came from
</li><li> MOREM = Is the amount (0 to 127) of "food units" that will be gained when the item is used (eaten)
</li><li> MOREZ = Is the poison level of the food
</li></ul>
<p><b>Note:</b> The following properties may also exist depending on your server version:
</p>
<ul><li> MOREX = The ID of a spell effect that will be gained when eaten
</li><li> MOREY = The strength of the spell effect
</li></ul>
</td></tr>
<tr>
<td> t_food_raw </td><td> 9 </td><td> This type is used for <i>raw</i> food.  It leverages the following properties:
<ul><li> MORE1 = ID of the item it makes when cooked (the default is i_unused and if defined, it will override TDATA1)
</li><li> MORE2 = The ID of the creature that this came from
</li><li> MOREM = Is the amount (0 to 127) of "food units" that will be gained when the item is used (eaten)
</li><li> MOREZ = Is the poison level of the food
</li><li> TDATA1 = The item ID this cooks into
</li></ul>
<p><b>Note:</b> The following properties may also exist depending on your server version:
</p>
<ul><li> MOREX = The ID of a spell effect that will be gained when eaten
</li><li> MOREY = The strength of the spell effect
</li><li> TDATA2 = The creature ID type that the food came from
</li><li> TDATA3 = The amount of skill required to cook it (did this ever work?)
</li></ul>
</td></tr>
<tr>
<td> t_armor </td><td> 10 </td><td> This type is used for armor.  It leverages the following properties:
<ul><li> MORE1L = Max hitpoints
</li><li> MORE1H = Current hitpoints
</li><li> MOREX = Spell effect when worn (for example, setting MOREX=1 causes a permanent Clumsy effect)
</li><li> MOREY = There are two possible effects of setting MOREY:
<ol><li> If MOREX is set, then MOREY is the power/effect of that spell
</li><li> If the ATTR includes attr_magic, then there is an AR bonus (how is this calculated?)
</li></ol>
</li></ul>
<p><b>Note:</b> Old versions of sphere stored remaining charges in MORE2, this is no longer true.
</p>
</td></tr>
<tr>
<td> t_weapon_mace_smith </td><td> 11 </td><td> This type is used for macefighting weapons that can also be used by blacksmiths to forge items.  It leverages the following properties:
<ul><li> MORE1L = Max hitpoints
</li><li> MORE1H = Current hitpoints
</li><li> MOREY = Attack bonus (percentage), but only if ATTR &amp; attr_magic
</li></ul>
<p>The following overrides can be set on a per item basis:
</p>
<ul><li> TAG.OVERRIDE.DAMAGETYPE = can be used on a per item basis to override the types of damage this weapon does
</li><li> TAG.OVERRIDE.SOUND_HIT = can be used on a per item basis to override the sound this weapon makes when it hits
</li><li> TAG.OVERRIDE.SOUND_MISS = can be used on a per item basis to override the sound this weapon makes when it misses
</li></ul>
</td></tr>
<tr>
<td> t_weapon_mace_sharp </td><td> 12 </td><td> This type is used for macefighting weapons that have sharp cutting edges.  It leverages the following properties:
<ul><li> MORE1L = Max hitpoints
</li><li> MORE1H = Current hitpoints
</li><li> MOREY = Attack bonus (percentage), but only if ATTR &amp; attr_magic
</li></ul>
<p>The following overrides can be set on a per item basis:
</p>
<ul><li> TAG.OVERRIDE.DAMAGETYPE = can be used on a per item basis to override the types of damage this weapon does
</li><li> TAG.OVERRIDE.SOUND_HIT = can be used on a per item basis to override the sound this weapon makes when it hits
</li><li> TAG.OVERRIDE.SOUND_MISS = can be used on a per item basis to override the sound this weapon makes when it misses
</li></ul>
</td></tr>
<tr>
<td> t_weapon_sword </td><td> 13 </td><td> This type is used for swordsmanship weapons.  It leverages the following properties:
<ul><li> MORE1L = Max hitpoints
</li><li> MORE1H = Current hitpoints
</li><li> MOREY = Attack bonus (percentage), but only if ATTR &amp; attr_magic
</li></ul>
<p>The following overrides can be set on a per item basis:
</p>
<ul><li> TAG.OVERRIDE.DAMAGETYPE = can be used on a per item basis to override the types of damage this weapon does
</li><li> TAG.OVERRIDE.SOUND_HIT = can be used on a per item basis to override the sound this weapon makes when it hits
</li><li> TAG.OVERRIDE.SOUND_MISS = can be used on a per item basis to override the sound this weapon makes when it misses
</li></ul>
</td></tr>
<tr>
<td> t_weapon_fence </td><td> 14 </td><td> This type is used for fencing weapons.  It leverages the following properties:
<ul><li> MORE1L = Max hitpoints
</li><li> MORE1H = Current hitpoints
</li><li> MOREY = Attack bonus (percentage), but only if ATTR &amp; attr_magic
</li></ul>
<p>The following overrides can be set on a per item basis:
</p>
<ul><li> TAG.OVERRIDE.DAMAGETYPE = can be used on a per item basis to override the types of damage this weapon does
</li><li> TAG.OVERRIDE.SOUND_HIT = can be used on a per item basis to override the sound this weapon makes when it hits
</li><li> TAG.OVERRIDE.SOUND_MISS = can be used on a per item basis to override the sound this weapon makes when it misses
</li></ul>
</td></tr>
<tr>
<td> t_weapon_bow </td><td> 15 </td><td> This type is used for archery weapons (bow or crossbow).  It leverages the following properties:
<ul><li> MORE1L = Max hitpoints
</li><li> MORE1H = Current hitpoints
</li><li> MOREY = Attack bonus (percentage), but only if ATTR &amp; attr_magic
</li><li> TDATA1 = The sound effect the weapon makes when it shoots
</li><li> TDATA2 = The required strength to wield the weapon
</li><li> TDATA3 = ID of arrow item that will be fired (and must therefore be on the player's person)
</li><li> TDATA4 = ID of the arrow animation (for bows it is usually i_arrow_x, for crossbows, i_xbow_x)
</li></ul>
<p>The following overrides can be set on a per item basis:
</p>
<ul><li> TAG.OVERRIDE.DAMAGETYPE = to override the types of damage this weapon does
</li><li> TAG.OVERRIDE.SOUND_HIT = to override the sound this weapon makes when it hits
</li><li> TAG.OVERRIDE.SOUND_MISS = to override the sound this weapon makes when it misses
</li><li> TAG.OVERRIDE.AMMOTYPE = to override the type of ammo (TDATA3) this item uses
</li><li> TAG.OVERRIDE.AMMOANIM = to override the ammo animation (TDATA4) this item uses
</li><li> TAG.OVERRIDE.AMMOANIMHUE = to override the color of the ammo animation this item uses
</li></ul>
</td></tr>
<tr>
<td> t_wand </td><td> 16 </td><td> This type is used for magic wands.  It leverages the following properties:
<ul><li> MORE1L = the current amount of hitpoints the item has
</li><li> MORE1H = the maximum hitpoints for the item
</li><li> MORE2 = the number of remaining charges (if magical)
</li><li> MOREX = the spell type (if magical)
</li><li> MOREY = the spell strength (0-1000)
</li><li> MOREZ = the poison skill applied (0-100)
</li><li> TDATA2 = Required Strength to equip the wand
</li><li> TDATA3 = ID of the light pattern
</li><li> TDATA4 = A flag to indicate what happens when the light burns out (0=nothing, 1=delete the object). 
</li></ul>
</td></tr>
<tr>
<td> t_telepad </td><td> 17 </td><td> This type is used for teleport pads.  It leverages the following properties:
<ul><li> MOREP = Coordinates of the point to which you will teleport when you step on the item
</li><li> MORE1 = If set to 1, the teleport pad will only work for players (and their pets)
</li><li> MORE2 = If set to 1, the teleport animation and sound will not be shown to anyone witnessing the teleport
</li></ul>
</td></tr>
<tr>
<td> t_switch </td><td> 18 </td><td> This type is used for switches.  The way these things work is, when used, they trigger @DCLICK on the LINK object.  It leverages the following properties:
<ul><li> LINK = UID of item to trigger
</li><li> MORE1 = The item ID of the next state of the switch
</li><li> MOREX = A flag to indicate if this is activated by stepping on it
</li></ul>
</td></tr>
<tr>
<td> t_book </td><td> 19 </td><td> This type is used for books of static or dynamic text.  It leverages the following properties:
<ul><li> MORE1L = This can be set to an ID of a book (some default book text is included in the sphere_books.scp file)
</li><li> MORE1H = Some flags that determine book behavior:
<ul><li> 0c00: Scripted book
</li><li> 0800: Editable book
</li><li> 08000:&nbsp;? time stamp&nbsp;?
</li></ul>
</li><li> AUTHOR = The ID of the character that wrote the book
</li><li> BODY.# = The text for each page of the book (starting with page 0)
</li></ul>
<p><b>Note:</b> we need more information on those flags...
</p>
</td></tr>
<tr>
<td> t_rune </td><td> 20 </td><td> This type is used for recall runes.  It leverages the following properties:
<ul><li> MORE1 = The number of uses left before it wears out
</li><li> MOREP = The coordinates of the marked location
</li></ul>
</td></tr>
<tr>
<td> t_booze </td><td> 21 </td><td> This type is used for alcohol (it causes a drunk effect when double clicked.)  It leverages the following properties:
<ul><li> TDATA1 = A flag that indicates whether the container is empty or not.
</li></ul>
</td></tr>
<tr>
<td> t_potion </td><td> 22 </td><td> This type is used for potions.  It leverages the following properties:
<ul><li> MORE1 = The potion spell effect that will result when the potion is double clicked
</li><li> MORE2 = The strength of the potion (This has a different effect defending on the spell, usually between 0 and 1000)
</li><li> MOREX = The countdown to explosion (for purple potions)
</li><li> TDATA1 = A flag that indicates whether the container is empty or not
</li></ul>
</td></tr>
<tr>
<td> t_fire </td><td> 23 </td><td> This type is used for fires (and ovens?).  These items can be used to cook food, and they can burn you if stepped on.  It leverages the following properties:
<ul><li> TIMER = time until it decays?
</li><li> MORE1 (or MORE2?) = Amount of damage it will cause when stepped on or dclicked
</li><li> MOREZ =  Type of light pattern it will cast
</li></ul>
</td></tr>
<tr>
<td> t_clock </td><td> 24 </td><td> This type is used to tell time (game time, not real time) when double clicked.  The result comes out something like "half past eleven o'clock at night".  From what I can tell there are no MORE or TDATA modifiers that affect the result.
</td></tr>
<tr>
<td> t_trap and t_trap_active </td><td> 25 and 26 </td><td> These types are used for traps that are triggered when walked on.  They leverage the following properties:
<ul><li> MORE1 = ID of the animation
</li><li> MORE2 = The damage the trap will cause
</li><li> MOREX = The length of time the animation will run
</li><li> MOREY = The length of time the activated trap will idle until reset
</li><li> MOREZ = A flag that indicates if the trap must idle before changing from active to inactive. 
</li></ul>
</td></tr>
<tr>
<td> t_musical </td><td> 27 </td><td> This type is used for musical instruments.  It leverages the following properties:
<ul><li> TDATA1 = The sound ID to be played if successful
</li><li> TDATA2 = The sound ID to be played if not successful
</li></ul>
</td></tr>
<tr>
<td> t_spell </td><td> 28 </td><td> This type is used for magic spell effects.  It leverages the following properties:
<ul><li> MORE1L = The polymorph effect on STR
</li><li> MORE1H = The polymorph effect on DEX
</li><li> MORE2 = The number of charges left
</li><li> MOREX = The spell effect that will result when the item is stepped on
</li><li> MOREY = The strength of the spell (This has a different effect defending on the spell, usually between 0 and 1000)
</li><li> MOREZ = Type of light pattern it will cast
</li></ul>
</td></tr>
<tr>
<td> t_gem </td><td> 29 </td><td> This type is used for gems, and from what I can tell there is no built-in behavior for it.
</td></tr>
<tr>
<td> t_water </td><td> 30 </td><td> This type is used for water, which means it can be fished in or used to clean used bandages.
<ul><li> MORE1 = The regiontype ID that determines what sorts of resources (fish etc) that it can produce (is this true?)
</li></ul>
</td></tr>
<tr>
<td> t_clothing </td><td> 31 </td><td> This type is used for all cloth based equip-able items.  It is essentially identical to t_armor and t_armor_leather.    It leverages the following properties:
<ul><li> MORE1L = Max hitpoints
</li><li> MORE1H = Current hitpoints
</li><li> MOREX = Spell effect when worn (for example, setting MOREX=1 causes a permanent Clumsy effect)
</li><li> MOREY = There are two possible effects of setting MOREY:
<ol><li> If MOREX is set, then MOREY is the power/effect of that spell
</li><li> If the ATTR includes attr_magic, then there is an AR bonus (how is this calculated?)
</li></ol>
</li></ul>
<p><b>Note:</b> Old versions of sphere stored remaining charges in MORE2, this is no longer true.
</p>
</td></tr>
<tr>
<td> t_scroll </td><td> 32 </td><td> This type is used for scrolls.  It leverages the following properties:
<ul><li> MOREX = ID of the spell to cast when double-clicked
</li><li> MOREY = Power of the spell (equivalent to the EFFECT setting of the spell itself?)
</li></ul>
</td></tr>
<tr>
<td> t_carpentry </td><td> 33 </td><td> This type is used by carpenters to craft items, and from what I can tell there is no built-in behavior for it.
</td></tr>
<tr>
<td> t_spawn_char </td><td> 34 </td><td> This type is used to spawn NPCs.  Once it spawns its first creature, it will turn red and change its appearance to the ICON of the creature (or appear as a wisp if the spawn is set to use a template.)  It leverages the following properties:
<ul><li> AMOUNT = The maximum amount of NPCs the spawner should create
</li><li> MORE1 = The creature ID or spawn template ID for what you want to spawn
</li><li> MORE2 = The current number of creatures spawned from this point
</li><li> MOREX = The minimum time between spawns (in minutes)
</li><li> MOREY = The maximum time between spawns (in minutes)
</li><li> MOREZ = The maximum distance away from the spawn to create the spawned NPC (this is also the maximum wander distance for the NPC)
</li></ul>
<p><b>Note:</b> The spawn is considered active if the TIMER has a positive value, and when the timer reaches zero, it is automatically restarted using a random number between MOREX and MOREY.
</p>
</td></tr>
<tr>
<td> t_game_piece </td><td> 35 </td><td> This type is used for game board pieces (checkers, chess, etc).  They cannot be removed from the game, and they have no tile image outside of the game board gump.  It leverages the following properties:
<ul><li> TDATA1 = The starting x position for this piece
</li><li> TDATA2 = The starting y position for this piece
</li></ul>
</td></tr>
<tr>
<td> t_portculis </td><td> 36 </td><td> This type is used for portcullis doors that raise and lower when double clicked.  It leverages the following properties:
<ul><li> MORE1 = The z height at the lowest setting
</li><li> MORE2 = The z height at the highest setting
</li></ul>
</td></tr>
<tr>
<td> t_figurine </td><td> 37 </td><td> This type is used for shrunk NPCs (essentially magic figurines), that turn into a "pet" creature when double clicked.  It leverages the following properties:
<ul><li> MORE1 = The creature ID that will spawn when the item is double clicked.
</li><li> MORE2 = The UID of the off-line creature (in "stable master" inventory)
</li><li> TDATA2 = The required strength to mount the creature (presumably only if it is possible to mount it)
</li><li> TDATA3 = The base creature ID. 
</li></ul>
</td></tr>
<tr>
<td> t_shrine </td><td> 38 </td><td> This type is used for shrines.  They will resurrect a ghost when double-clicked by a ghost.
</td></tr>
<tr>
<td> t_moongate </td><td> 39 </td><td> This type is used for moongates.  When stepped on they teleport the player to another location.  It leverages the following properties:
<ul><li> MOREP = The coordinates that the moongate leads to
</li></ul>
</td></tr>
<tr>
<td> t_chair </td><td> 40 </td><td> This type is used for any sort of a chair item and it's only purpose is to trigger a sitting animation.
</td></tr>
<tr>
<td> t_forge </td><td> 41 </td><td> This type is used by blacksmiths to smelt ore....
</td></tr>
<tr>
<td> t_ore </td><td> 42 </td><td> This type is harvested by miners, and converted by blacksmiths (using a forge) into something else.  It leverages the following properties:
<ul><li> TDATA1 = ID of item created when the ore is smelted (usually ingots)
</li></ul>
</td></tr>
<tr>
<td> t_log </td><td> 43 </td><td> This type is a raw material resource usually harvested from trees.
</td></tr>
<tr>
<td> t_tree </td><td> 44 </td><td> This type is chopped by lumberjacks to get logs.  It leverages the following properties:
<ul><li> FRUIT = ID of item gathered if double-clicked (usually logs)
</li></ul>
</td></tr>
<tr>
<td> t_rock </td><td> 45 </td><td> This type can be mined for ore.
<ul><li> MORE1 = The regiontype ID that determines what sorts of resources (fish etc) that it can produce (is this true?)
</li></ul>
</td></tr>
<tr>
<td> t_carpentry_chop </td><td> 46 </td><td> A carpentry tool that can be used to craft carpentry objects as well as used to "chop" trees (like a saw?)
</td></tr>
<tr>
<td> </td><td> </td><td>
<pre>t_multi                  47   // = multi part object like house or ship.  MORE1 is the UID of the player that created/owns the multi 
t_reagent                48   // = alchemy when clicked&nbsp;?
t_ship                   49   // = this is a ship multi. MORE2 contains the speed, anchor flag, direction of movement, and facing direction in each byte respectively
t_ship_plank             50   // TDATA1 is the itemID of the next open/closed state. 
t_ship_side              51   // = should extend to make a plank TDATA1 is the itemID of the next open/closed state. 
t_ship_side_locked       52   // TDATA1 is the itemID of the next open/closed state. 
t_ship_tiller            53   // = tiller man on the ship.
t_eq_trade_window        54   // = container for the trade window.
t_fish                   55   // = fish can be cut up.
</pre>
</td></tr>
<tr>
<td> t_sign_gump </td><td> 56 </td><td> This type is used for simple signs (and things like grave stones).  It leverages the following properties:
<ul><li> TDATA2 = The gumpID
</li><li> TDATA3 = The minimum gump size
</li><li> TDATA4 = The maximum gump size
</li></ul>
</td></tr>
<tr>
<td> t_stone_guild </td><td> 57 </td><td> This type is used for guild stones.  It leverages the following properties:
<ul><li> MORE1 = The alignment of the guild (chaos, neutral, order)
</li><li> MORE2 = The amount of gold in the guild account
</li></ul>
</td></tr>
<tr>
<td> </td><td> </td><td>
<pre>t_anim_active            58   // = active anium that will recycle when done.
t_sand                   59   // = sand on the beach
t_cloth                  60   // = bolt or folded cloth
t_hair                   61   //
t_beard                  62   // = just for grouping purposes.
</pre>
</td></tr>
<tr>
<td> t_ingot </td><td> 63 </td><td> This type is used for ingots (when a blacksmith smelts ore, it turns into ingots.  It leverages the following properties:
<ul><li> TDATA1 = The skill required to smelt this
</li><li> TDATA2 = The skill required to get the maximum yield when smelting
</li></ul>
</td></tr>
<tr>
<td> t_coin </td><td> 64 </td><td> This types is used for coins, gold or otherwise.
</td></tr>
<tr>
<td> t_crops </td><td> 65 </td><td> This type is used to grow plants that likely bear fruit.  Double clicking a t_crop item will harvest the fruit if it is ripe.  It leverages the following properties:
<ul><li> MORE1 = Time in seconds before this item will grow to the next stage (this overrides the default server defined number)
</li><li> TDATA1 = Is the ID of the first stage of the crop (the sprout), it is the ID that the crop will be reset to regrow from (0=nothing, which means this plant will not regrow once harvested)
</li><li> TDATA2 = Is the ID of the next stage of the crop (or zero if this is the final mature crop which will bear the fruit)
</li><li> TDATA3 = Is the ID of the fruit that this plant will grow and should only be set on the <i>ripe</i> plant (0 means the plant is not mature)
</li></ul>
<p><b>Note</b> This type has unusual TIMER behavior in that regardless of the ATTR flags, the timer will restart when it reaches zero.
</p>
</td></tr>
<tr>
<td> t_drink </td><td> 66 </td><td> This type is used for non-alcoholic drinks.  It leverages the following properties:
<ul><li> TATA1 = A flag that indicates whether the container is empty or not. 
</li></ul>
<p><b>Note:</b> There is an INI flag OF_DrinkIsFood (0x10000) that, if set, will increase FOOD level when the drink is consumed (like T_FOOD does)
</p>
</td></tr>
<tr>
<td> </td><td> </td><td>
<pre>t_anvil                  67   // = for repair.
t_port_locked            68   // = this portcullis must be triggered.
t_spawn_item             69   // = spawn other items.
t_telescope              70   // = big telescope pic.
</pre>
</td></tr>
<tr>
<td> t_bed </td><td> 71 </td><td> This type is used to indicate the item is a bed.  I am not sure how it is used exactly, but it leverages the following properties:
<ul><li> TDATA1 = The direction it occupies
</li></ul>
</td></tr>
<tr>
<td> t_gold </td><td> 72 </td><td> This type is used to indicate the object is a gold coin and can be used to purchase stuff.
</td></tr>
<tr>
<td> t_map </td><td> 73 </td><td> This type is used for cartography maps.  It has the following properties:
<ul><li> MORE1L = The top coordinate
</li><li> MORE1H = The left coordinate
</li><li> MORE2L = The bottom coordinate
</li><li> MORE2H = The right coordinate
</li><li> MOREZ = A flag that indicates whether the map has pins or not
</li><li> MOREX and MOREY = The coordinates of the pin (I think)
</li></ul>
</td></tr>
<tr>
<td> t_eq_memory_obj </td><td> 74 </td><td> This type is used for character memories, and it really depends on the type of memory to know what each property really means, but here is a relatively good guide:
<ul><li> MORE1L = The action type this is a memory for
</li><li> MORE1H = The skill involved
</li><li> MORE2 = The start time of the memory
</li><li> MOREP = The map coordinates at which the memory occurred. 
</li></ul>
</td></tr>
<tr>
<td> </td><td> </td><td>
<pre>t_weapon_mace_staff      75   // = staff type of mace. or just other type of mace.
</pre>
</td></tr>
<tr>
<td> t_eq_horse </td><td> 76 </td><td> This type is used for equipped horse object.  Essentially it represents a riding horse to the client.  It leverages the following properties:
<ul><li> MORE1 = The creature ID
</li><li> MORE2 = The UID of the offline creature (in "stable master" inventory)
</li><li> TDATA2 = The required strength to mount it
</li><li> TDATA3 = The base creature ID
</li></ul>
</td></tr>
<tr>
<td> t_comm_crystal </td><td> 77 </td><td> This type is used for communication crystals.
</td></tr>
<tr>
<td> t_game_board </td><td> 78  </td><td> This type is used as a container for game pieces (t_game_piece).  It leverages the following properties:
<ul><li> MORE1 = The type of pieces to use (0=chess, 1=checkers, 2=none... presumably this is hard-coded)
</li><li> TDATA2 = The gumpID of the container (this is not an ITEMDEF)
</li><li> TDATA3 = The minimum gump size
</li><li> TDATA4 = The maximum gump size
</li></ul>
</td></tr>
<tr>
<td> t_trash_can </td><td> 79 </td><td> This type is used as a trash can container, and it deletes any object placed into it.  It leverages the following properties:
<ul><li> TDATA2 = The gumpID of the container (this is not an ITEMDEF)
</li><li> TDATA3 = The minimum gump size
</li><li> TDATA4 = The maximum gump size
</li></ul>
</td></tr>
<tr>
<td> t_cannon_muzzle </td><td> 80 </td><td> This type is used for the business end of the cannon.
</td></tr>
<tr>
<td> t_cannon </td><td> 81 </td><td> This type is used for the cannon control.  It leverages the following properties:
<ul><li> MORE2 = A mask of what is currently loaded in it. (0 = none, 1=powder, 2=shot)
</li></ul>
</td></tr>
<tr>
<td> t_cannon_ball </td><td> 82 </td><td> This is ammo for a t_cannon.
</td></tr>
<tr>
<td> </td><td> </td><td>
<pre>t_armor_leather          83   // = non metallic armor (t_clothing)
</pre>
</td></tr>
<tr>
<td> t_seed </td><td> 84 </td><td> This type is used for seeds.  A seed can be created by using a dagger on a fruit (assuming the fruit is setup to have a seed.)  A seed can be planted by double clicking it and targeting the ground (specifically t_dirt items).  It leverages the following properties:
<ul><li> TDATA1 = The ID of a t_crop item that will grow the fruit that this seed comes from
</li></ul>
</td></tr>
<tr>
<td> </td><td> </td><td>
<pre>t_junk                   85   // = never used
t_crystal_ball           86   //
t_swamp                  87   // = swamp (smelly)
</pre>
</td></tr>
<tr>
<td> t_message </td><td> 88 </td><td> This type is used for bulletin board messages.  It leverages the following properties:
<ul><li> TDATA2 = The gumpID
</li><li> TDATA3 = The minimum gump size
</li><li> TDATA4 = The maximum gump size
</li></ul>
</td></tr>
<tr>
<td> </td><td> </td><td>
<pre>t_reagent_raw            89   // = freshly grown reagents...not processed yet.
t_eq_client_linger       90   // = change player to npc for a while.
t_snow                   91   // = snow
</pre>
</td></tr>
<tr>
<td> t_it_stone </td><td> 92 </td><td> This type is an "item stone" that is used to generate items when the object is double clicked.  It has the following properties:
<ul><li> MORE1 = The item or template ID to generate
</li><li> MORE2 = The price (or Plotflags to set?)
</li><li> MOREX = The regen time (0 = instant)
</li><li> MOREY = The total amount to deliver (0 = infinite, 0xFFFF = none left)
</li></ul>
</td></tr>
<tr>
<td> </td><td> </td><td>
<pre>t_unused_93              93
</pre>
</td></tr>
<tr>
<td> t_explosion </td><td> 94 </td><td>  This type is used for explosion animations.  It leverages the following properties:
<ul><li> MOREX = The damage that the explosion will cause
</li><li> MOREY = The type of damage (fire, magic, etc)
</li><li> MOREZ = The distance range for the damage
</li></ul>
</td></tr>
<tr>
<td> t_eq_npc_script </td><td> 95 </td><td> This type is used to script NPC actions (in the form of a book).  The sphere_defs.scp file says "get rid of this in favor of waiting on m_events" but it may still exist... if so, it leverages the following properties:
<ul><li> MORE1 = The same as for other books
</li><li> MORE2L = The current script page
</li><li> MORE2H = The current offset
</li><li> MOREZ = The priority for this script (as a percent, this is the chance they want to "do" this task)
</li></ul>
</td></tr>
<tr>
<td> </td><td> </td><td>
<pre>t_web                    96   // = walk on this and transform into some other object.  MORE1 is the amount of hits the web can take.
t_grass                  97   // = can be eaten by grazing animals
t_arock                  98   // = a rock or boulder. can be thrown by giants.
t_tracker                99   // = points to a linked object.
</pre>
</td></tr>
<tr>
<td> t_sound </td><td> 100 </td><td> This type is used to play sounds.  It uses the following properties:
<ul><li> MORE1 = The sound ID
</li><li> MORE2 = A flag to indicate repetition
</li></ul>
</td></tr>
<tr>
<td> t_stone_town </td><td> 101 </td><td> This type is used for town stones.  It leverages the following properties:
<ul><li> MORE1 = The alignment of the town (chaos, neutral, order)
</li><li> MORE2 = The amount of gold in the town bank account
</li></ul>
</td></tr>
<tr>
<td> </td><td> </td><td>
<pre>t_weapon_mace_crook     102   //
t_weapon_mace_pick      103   //
t_leather               104   // = leather or skins of some sort.(not wearable)
t_ship_other            105   // = some other part of a ship.
</pre>
</td></tr>
<tr>
<td> t_bboard </td><td> 106 </td><td> This type is a bulleting board container that holds t_message items.  It leverages the following properties:
<ul><li> TDATA2 = The gumpID of the container
</li><li> TDATA3 = The minimum gump size
</li><li> TDATA4 = The maximum gump size
</li></ul>
</td></tr>
<tr>
<td> t_spellbook </td><td> 107 </td><td> This type is used for the Magery spellbook.  It leverages the following properties:
<ul><li> MORE1 = A bit mask of available spells in circles 0-4, so to add all those spells: set MORE1=0fffffff
</li><li> MORE2 = A bit mask of available spells in circles 5-8, so to add all those spells: set MORE2=0fffffff
</li></ul>
<p><b>Note:</b> In older sphere versions, MOREX, MOREY, and MOREZ could be set to add additional spells (necro, etc), but recently these concepts may have been removed... same with these TDATA settings:
</p>
<ul><li> TDATA2 = Required Strength to equip the book
</li><li> TDATA3 = Type of light pattern it will cast
</li><li> TDATA4 = A flag to indicate what happens when the light burns out (0=nothing, 1=delete the object)
</li></ul>
</td></tr>
<tr>
<td> t_corpse </td><td> 108 </td><td> This type is a container used for all dead corpses.  It leverages the following properties:
<ul><li> MORE1 = The time of death
</li><li> MORE2 = The UID of the individual character that landed the killing blow
</li><li> MOREX &amp; MOREY = Combined, these make up a single DWORD which specifies what type of creature this was
</li><li> MOREZ = The direction it is facing
</li><li> TDATA2 = The gumpID of the container
</li><li> TDATA3 = The minimum gump size
</li><li> TDATA4 = The maximum gump size
</li></ul>
<p>There are two special TAGs for corpses:
</p>
<ul><li> TAG.BLOOD = This is the number of times you can carve the corpse and cause blood to come out (default 5)
</li><li> TAG.MAXBLOOD = Not certain about this one, but it is likely related... perhaps it is set on the CHARDEF?
</li></ul>
</td></tr>
<tr>
<td> </td><td> </td><td>
<pre>t_track_item            109   // - track a id or type of item.
t_track_char            110   // = track a char or range of char id's
t_weapon_arrow          111   //
t_weapon_bolt           112   //
t_eq_vendor_box         113   // = an equipped vendor box
</pre>
</td></tr>
<tr>
<td> t_eq_bank_box </td><td> 114 </td><td> This type is a container that is used for the character bank.  It leverages the following properties:
<ul><li> MORE1 = The amount of gold in the account (is this still true?)
</li><li> MORE2 = The amount to restock to (for NPCs vendors who can buy stuff from players?)
</li><li> MOREP = The location in the world (x, y, and z) where the bank box was opened
</li><li> TDATA2 = The gumpID for the bank box container
</li><li> TDATA3 = The minimum gump size
</li><li> TDATA4 = the maximum gump size
</li></ul>
</td></tr>
<tr>
<td> t_deed </td><td> 115 </td><td> This type is used to create something else when double clicked.  It is perhaps the best solution for a player to place a <i>multi</i> part item like a house.  When double clicked, it will prompt for a target location.  It leverages the following properties:
<ul><li> MORE1 = The ID of the item that will be created at the target location
</li><li> MORE2 = The previous key ID (ideally this is set when a house or ship are re-deeded so that all the existing keys will still work)
</li></ul>
</td></tr>
<tr>
<td> t_loom </td><td> 116 </td><td> This type of device is used by weavers who turn wool or thread into bolts of cloth.  It leverages the following properties:
<ul><li> MORE1 = The ID of the currently loaded resource (wool or cotton/flax) that is being woven
</li><li> MORE2 = The amount of resources currently in the loom
</li></ul>
</td></tr>
<tr>
<td> t_bee_hive </td><td> 117 </td><td> This type is used for beehives.  It leverages the following properties:
<ul><li> MORE1 = The amount of honey which has accumulated in the hive
</li></ul>
</td></tr>
<tr>
<td> t_archery_butte </td><td> 118 </td><td> This type is used for practice archery targets.  When double clicked, the target will first check if you have an archery weapon equipped and if so, it will return some ammo.  It leverages the following properties:
<ul><li> MORE1 = The ID for the type of ammo currently stuck in the target
</li><li> MORE2 = The amount of items stuck in the target
</li></ul>
</td></tr>
<tr>
<td> </td><td> </td><td>
<pre>t_eq_murder_count       119   // = my murder count flag.  MORE1 contains the amount of time before it expires. 
t_eq_stuck              120   // we are stuck in a web
t_trap_inactive         121   //  = a safe trap.
//t_unused_122          122
t_bandage               123   //  = can be used for healing.
t_campfire              124   //  = this is a fire but a small one.
t_map_blank             125
t_spy_glass             126
t_sextant               127
t_scroll_blank          128
</pre>
</td></tr>
<tr>
<td> t_fruit </td><td> 129 </td><td> This type is used for fruit.  When double clicked, fruit will be eaten.  Fruit can be grown from crops (t_crop).  It leverages the following properties:
<ul><li> TDATA1 = The ID of a t_crop item that this fruit comes from (If not set, this fruit may not have a seed, use zero to be certain)
</li><li> MOREM = Is the amount (0 to 127) of "food units" that will be gained when the item is used (eaten)
</li><li> MOREZ = Is the poison level of the fruit
</li></ul>
</td></tr>
<tr>
<td> </td><td> </td><td>
<pre>t_water_wash            130   // water that will not contain fish. (for washing or drinking)  TDATA1 is a flag that indicates whether the container is empty or not 
t_weapon_axe            131   // not the same as a sword. but uses swordsmanship skill
</pre>
</td></tr>
<tr>
<td> t_weapon_xbow </td><td> 132 </td><td> This type is used for crossbow weapons.  It is essentially identical to t_weapon_bow.
</td></tr>
<tr>
<td> </td><td> </td><td>
<pre>t_spellicon             133
t_door_open             134
t_meat_raw              135   // just a meaty part of a corpse. (uncooked meat)
t_garbage               136
</pre>
</td></tr>
<tr>
<td> t_keyring </td><td> 137 </td><td> This type is a container used to store keys.  It leverages the following properties:
<ul><li> TDATA2 = The gumpID
</li><li> TDATA3 = The minimum gump size
</li><li> TDATA4 = The maximum gump size
</li></ul>
</td></tr>
<tr>
<td> </td><td> </td><td>
<pre>t_table                 138   // doesn't really do anything.
t_floor                 139
t_roof                  140
t_feather               141   // a birds feather
t_wool                  142   // wool cut from a sheep.
t_fur                   143
t_blood                 144   // blood of some creature
</pre>
</td></tr>
<tr>
<td> t_foliage </td><td> 145 </td><td> This type is very similar to t_crops, the difference being the foliage does not disappear when the fruit is harvested.  It leverages the following properties:
<ul><li> MORE1 = Time in seconds before this item will grow to the next stage (this overrides the default server defined number)
</li><li> TDATA1 = Is the ID of the first stage of the crop (the sprout)
</li><li> TDATA2 = Is the ID of the next stage of the crop (or zero if this is the final mature crop which will bear the fruit)
</li><li> TDATA3 = Is the ID of the fruit that this plant will grow and should only be set on the <i>ripe</i> plant
</li></ul>
<p><b>Note</b> This type has unusual TIMER behavior in that regardless of the ATTR flags, the timer will restart when it reaches zero.
</p>
</td></tr>
<tr>
<td> </td><td> </td><td>
<pre>t_grain                 146
t_scissors              147
t_thread                148
t_yarn                  149
t_spinwheel             150
t_bandage_blood         151   //  = can't be used for healing.
t_fish_pole             152
t_shaft                 153   // bolt or arrow.
t_lockpick              154
t_kindling              155
t_train_dummy           156
t_train_pickpocket      157
t_bedroll               158
t_bellows               159
t_hide                  160   // made into leather.
t_cloth_bolt            161
t_board                 162   // = logs are plained into decent lumber
t_pitcher               163   // TDATA1 is a flag that indicates whether the container is empty or not. 
t_pitcher_empty         164   // TDATA1 is a flag that indicates whether the container is empty or not. 
t_dye_vat               165
t_dye                   166
t_potion_empty          167   // empty bottle.
t_mortar                168
t_hair_dye              169
t_sewing_kit            170
t_tinker_tools          171
t_wall                  172   // wall of a structure.
t_window                173   // window for a structure.  MOREZ is the light pattern
t_cotton                174   // cotton from the plant
t_bone                  175
</pre>
</td></tr>
<tr>
<td> t_eq_script </td><td> 176 </td><td> This type can have tags and can be equipped.  Possibly used for memory objects that leverage @Equip and @UnEquip triggers.
</td></tr>
<tr>
<td> </td><td> </td><td>
<pre>t_ship_hold             177   // ships hold.  TDATA2 is the gumpID, TDATA3 is the minimum gump size, TDATA4 is the maximum gump size
t_ship_hold_lock        178
t_lava                  179
</pre>
</td></tr>
<tr>
<td> t_shield </td><td> 180 </td><td> This type is used to indicate the object is an equipable shield.  It has the following properties:
<ul><li> MORE1L = The current amount of hitpoints the item has
</li><li> MORE1H = The maximum hitpoints for the item
</li><li> MORE2 = The number of remaining charges (if magical)
</li><li> MOREX = The spell type (if magical)
</li><li> MOREY = The spell strength (0-1000)
</li></ul>
</td></tr>
<tr>
<td> t_jewelry </td><td> 181 </td><td> This type is used for equpable jewelry.  It leverages the following properties:
<ul><li> MORE1L = The current amount of hitpoints the item has
</li><li> MORE1H = The maximum hitpoints for the item
</li><li> MORE2 = The number of remaining charges (if magical)
</li><li> MOREX = The spell type (if magical)
</li><li> MOREY = The spell strength (0-1000)
</li><li> TDATA2 = Required Strength to equip the item
</li><li> TDATA3 = Light pattern
</li><li> TDATA4 = A flag to indicate what happens when the light burns out (0=nothing, 1=delete the object)
</li></ul>
</td></tr>
<tr>
<td> t_dirt </td><td> 182 </td><td> This type is used to represent a patch of dirt where something can be planted.
</td></tr>
<tr>
<td> t_script </td><td> 183 </td><td> This type can have tags, but can NOT be equipped.
</td></tr>
<tr>
<td> </td><td> </td><td>
<pre>t_spellbook_necro       184   // AOS Necromancy spellbook (should have MOREZ=100 by default)
t_spellbook_pala        185   // AOS Paladin spellbook (should have MOREZ=200 by default)
t_spellbook_extra       186   // some spellbook for script purposes (MOREZ=basic offset)
t_spellbook_bushido     187   // SE Bushido spellbook (should have MOREZ=400 by default)
t_spellbook_ninjitsu    188   // SE Ninjitsu spellbook (should have MOREZ=500 by default)
t_spellbook_arcanist    189   // ML Spellweaver spellbook (should have MOREZ=600 by default)
t_multi_custom          190   // Customisable multi
t_spellbook_mystic      191   // SA Mysticism spellbook (should have MOREZ=677 by default)
t_hoverover             192   // Hover-over item (CAN_C_HOVER can hover over blocking items)
t_spellbook_bard        193   // SA Bard spellbook (should have MOREZ=700 by default)
</pre>
</td></tr></table>
<a name="Scripted_TYPEDEFs" id="Scripted_TYPEDEFs"></a><h2><span class="editsection">[<a href="/index.php?title=TYPEDEF&amp;action=edit&amp;section=2" title="Edit section: Scripted TYPEDEFs">edit</a>]</span> <span class="mw-headline">Scripted TYPEDEFs</span></h2>
<table border="1">
<tr>
<th> DEFNAME </th><th> File </th><th> Description
</th></tr>
<tr>
<td> t_advance_gate </td><td>&nbsp;??.scp </td><td> MORE = ID of character to change into
</td></tr></table>
<a name="Syntax" id="Syntax"></a><h2><span class="editsection">[<a href="/index.php?title=TYPEDEF&amp;action=edit&amp;section=3" title="Edit section: Syntax">edit</a>]</span> <span class="mw-headline">Syntax</span></h2>
<p>The syntax for defining a type is:
</p><p><br />
<tt>
[TYPEDEF <i>defname</i>]<br />
TERRAIN=<i>id</i><br />
TERRAIN=<i>start_id</i>, <i>end_id</i><br />
<br />
ON=<i>trigger_name</i><br />
&nbsp;&nbsp;&nbsp;&nbsp;<i>script</i><br />
<br />
ON=<i>trigger_name</i><br />
&nbsp;&nbsp;&nbsp;&nbsp;<i>script</i><br />
<br /></tt>
</p><p><br />
Any number of triggers can be handled by one <strong class="selflink">TYPEDEF</strong> definition, however it is not possible to handle the same trigger twice without using multiple definitions.
</p><p><br />
The trigger name can be the name of any <a href="/index.php/Items#Triggers" title="Items">item trigger</a>. The return value from the script can affect Sphere's hardcoded behaviour in different ways. See the documentation for the trigger to discover what parameters are passed in to each trigger and what the return values do.
</p><p><br />
<b>Note:</b> If the <i>defname</i> matches any of Sphere's hardcoded types (see 'typedefs' block in sphere_defs.scp), then the <strong class="selflink">TYPEDEF</strong> can be used to override the behaviours of items of that type.
</p><p><br />
</p>
<a name="Examples" id="Examples"></a><h2><span class="editsection">[<a href="/index.php?title=TYPEDEF&amp;action=edit&amp;section=4" title="Edit section: Examples">edit</a>]</span> <span class="mw-headline">Examples</span></h2>
<pre style="color: darkblue; font-family: monospace; border: none;">//
// Water definition from default script pack.
//
[TYPEDEF t_water]
TERRAIN = 0a8	0ab
TERRAIN = 0136	0137
</pre>
<pre style="color: darkblue; font-family: monospace; border: none;">//
// Makes an item speak when double clicked.
//
[TYPEDEF t_exampletype]
ON=@DClick
    SAY I have been double clicked!
    RETURN 2
</pre>

<!-- 
NewPP limit report
Preprocessor node count: 283/1000000
Post-expand include size: 3321/2097152 bytes
Template argument size: 529/2097152 bytes
Expensive parser function count: 8/100
-->

<!-- Saved in parser cache with key d00b020c:pcache:idhash:77-0!1!0!!en!2 and timestamp 20120714135302 -->
<div class="printfooter">
Retrieved from "<a href="http://wiki.sphere.torfo.org/index.php/TYPEDEF">http://wiki.sphere.torfo.org/index.php/TYPEDEF</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/index.php/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/index.php/Category:Reference_Compendium" title="Category:Reference Compendium">Reference Compendium</a></span> | <span dir='ltr'><a href="/index.php/Category:Definitions" title="Category:Definitions">Definitions</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/index.php/TYPEDEF" title="View the content page [c]" accesskey="c">Page</a></li>
				 <li id="ca-talk" class="new"><a href="/index.php?title=Talk:TYPEDEF&amp;action=edit&amp;redlink=1" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/index.php?title=TYPEDEF&amp;action=edit" title="You can edit this page.&#10;Please use the preview button before saving [e]" accesskey="e">Edit</a></li>
				 <li id="ca-history"><a href="/index.php?title=TYPEDEF&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>
				 <li id="ca-move"><a href="/index.php/Special:MovePage/TYPEDEF" title="Move this page [m]" accesskey="m">Move</a></li>
				 <li id="ca-watch"><a href="/index.php?title=TYPEDEF&amp;action=watch" title="Add this page to your watchlist [w]" accesskey="w">Watch</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-userpage"><a href="/index.php/User:Ben" title="Your user page [.]" accesskey="." class="new">Ben</a></li>
				<li id="pt-mytalk"><a href="/index.php/User_talk:Ben" title="Your talk page [n]" accesskey="n" class="new">My talk</a></li>
				<li id="pt-preferences"><a href="/index.php/Special:Preferences" title="Your preferences">My preferences</a></li>
				<li id="pt-watchlist"><a href="/index.php/Special:Watchlist" title="The list of pages you are monitoring for changes [l]" accesskey="l">My watchlist</a></li>
				<li id="pt-mycontris"><a href="/index.php/Special:Contributions/Ben" title="List of your contributions [y]" accesskey="y">My contributions</a></li>
				<li id="pt-logout"><a href="/index.php?title=Special:UserLogout&amp;returnto=TYPEDEF" title="Log out">Log out</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://wiki.sphere.torfo.org/images/SphereWiki.png);" href="/index.php/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/index.php/Special:Search" id="searchform"><div>
				<input id="searchInput" name="search" type="text" title="Search SphereWiki [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search the pages for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/index.php/Main_Page">Main Page</a></li>
				<li id="n-recentchanges"><a href="/index.php/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-randompage"><a href="/index.php/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li>
				<li id="n-SphereServer-Forum"><a href="http://www.sphereserver.net">SphereServer Forum</a></li>
				<li id="n-help"><a href="/index.php/Help:Contents" title="The place to find out">Help</a></li>
			</ul>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-Setting_Up_Sphere'>
		<h5>Setting Up Sphere</h5>
		<div class='pBody'>
			<ul>
				<li id="n-Where-To-Get-Sphere"><a href="/index.php/Where_to_get_Sphere">Where To Get Sphere</a></li>
				<li id="n-Installing-Sphere"><a href="/index.php/Installing_Sphere">Installing Sphere</a></li>
				<li id="n-Configuring-Sphere.ini"><a href="/index.php/Configuring_Sphere.ini">Configuring Sphere.ini</a></li>
			</ul>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-Reference_Compendium'>
		<h5>Reference Compendium</h5>
		<div class='pBody'>
			<ul>
				<li id="n-Definitions"><a href="/index.php/Category:Definitions">Definitions</a></li>
				<li id="n-Objects"><a href="/index.php/Category:Objects">Objects</a></li>
				<li id="n-Scripts"><a href="/index.php/Category:Scripts">Scripts</a></li>
			</ul>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-Tutorial_Chapters'>
		<h5>Tutorial Chapters</h5>
		<div class='pBody'>
			<ul>
				<li id="n-Chapter-One"><a href="/index.php/Chapter_1">Chapter One</a></li>
				<li id="n-Chapter-Two"><a href="/index.php/Chapter_2">Chapter Two</a></li>
				<li id="n-Chapter-Three"><a href="/index.php/Chapter_3">Chapter Three</a></li>
				<li id="n-Chapter-Four"><a href="/index.php/Chapter_4">Chapter Four</a></li>
				<li id="n-Chapter-Five"><a href="/index.php/Chapter_5">Chapter Five</a></li>
				<li id="n-Chapter-Six"><a href="/index.php/Chapter_6">Chapter Six</a></li>
				<li id="n-Chapter-Seven"><a href="/index.php/Chapter_7">Chapter Seven</a></li>
				<li id="n-Chapter-Eight"><a href="/index.php/Chapter_8">Chapter Eight</a></li>
				<li id="n-Chapter-Nine"><a href="/index.php/Chapter_9">Chapter Nine</a></li>
				<li id="n-Chapter-Ten"><a href="/index.php/Chapter_10">Chapter Ten</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/index.php/Special:WhatLinksHere/TYPEDEF" title="List of all wiki pages that link here [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/index.php/Special:RecentChangesLinked/TYPEDEF" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-specialpages"><a href="/index.php/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/index.php?title=TYPEDEF&amp;printable=yes" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/index.php?title=TYPEDEF&amp;oldid=841" title="Permanent link to this version of the page">Permanent link</a></li>			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 27 August 2011, at 18:45.</li>
					<li id="viewcount">This page has been accessed 6,003 times.</li>
					<li id="privacy"><a href="/index.php/SphereWiki:Privacy_policy" title="SphereWiki:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/index.php/SphereWiki:About" title="SphereWiki:About">About SphereWiki</a></li>
					<li id="disclaimer"><a href="/index.php/SphereWiki:General_disclaimer" title="SphereWiki:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Piwik -->
<script type="text/javascript">
var pkBaseURL = (("https:" == document.location.protocol) ? "https://sphere.torfo.org/piwik/" : "http://sphere.torfo.org/piwik/");
document.write(unescape("%3Cscript src='" + pkBaseURL + "piwik.js' type='text/javascript'%3E%3C/script%3E"));
</script><script type="text/javascript">
try {
var piwikTracker = Piwik.getTracker(pkBaseURL + "piwik.php", 4);
piwikTracker.trackPageView();
piwikTracker.enableLinkTracking();
} catch( err ) {}
</script>
<!-- End Piwik Tag -->
<!-- Served in 0.829 secs. --></body></html>
