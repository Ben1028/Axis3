<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.14.0" />
		<meta name="keywords" content="The Process of Scripting" />
		<link rel="alternate" type="application/x-wiki" title="Edit" href="http://wiki.sphere.torfo.org/index.php?title=The_Process_of_Scripting&amp;action=edit" />
		<link rel="edit" title="Edit" href="http://wiki.sphere.torfo.org/index.php?title=The_Process_of_Scripting&amp;action=edit" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/opensearch_desc.php" title="SphereWiki (en)" />
		<link rel="alternate" type="application/rss+xml" title="SphereWiki RSS Feed" href="http://wiki.sphere.torfo.org/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="SphereWiki Atom Feed" href="http://wiki.sphere.torfo.org/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>The Process of Scripting - SphereWiki</title>
		<link rel="stylesheet" href="/skins/common/shared.css?195" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins/common/commonPrint.css?195" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins/monobook/main.css?195" type="text/css" media="screen" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins/monobook/IE50Fixes.css?195" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins/monobook/IE55Fixes.css?195" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins/monobook/IE60Fixes.css?195" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins/monobook/IE70Fixes.css?195" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=18000&amp;action=raw&amp;maxage=18000" type="text/css" />
		<link rel="stylesheet" href="/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=18000&amp;action=raw&amp;maxage=18000" type="text/css" media="print" />
		<link rel="stylesheet" href="/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=18000&amp;action=raw&amp;maxage=18000" type="text/css" />
		<link rel="stylesheet" href="/index.php?title=-&amp;action=raw&amp;maxage=18000&amp;smaxage=0&amp;ts=20120630142713&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins/common/IEFixes.js?195"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins";
		var wgArticlePath = "/index.php/$1";
		var wgScriptPath = "";
		var wgScript = "/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://wiki.sphere.torfo.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "The_Process_of_Scripting";
		var wgTitle = "The Process of Scripting";
		var wgAction = "view";
		var wgArticleId = "28";
		var wgIsArticle = true;
		var wgUserName = "Ben";
		var wgUserGroups = ["*", "user", "autoconfirmed"];
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = "212";
		var wgVersion = "1.14.0";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		var wgAjaxWatch = {"watchMsg": "Watch", "unwatchMsg": "Unwatch", "watchingMsg": "Watching...", "unwatchingMsg": "Unwatching..."};
		/*]]>*/</script>

		<script type="text/javascript" src="/skins/common/wikibits.js?195"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins/common/ajax.js?195"></script>
		<script type="text/javascript" src="/skins/common/ajaxwatch.js?195"></script>
		<script type="text/javascript" src="/index.php?title=-&amp;action=raw&amp;smaxage=0&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-The_Process_of_Scripting skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
				<h1 id="firstHeading" class="firstHeading">The Process of Scripting</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From SphereWiki</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<table id="toc" class="toc" summary="Contents"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1"><a href="#Introduction"><span class="tocnumber">1</span> <span class="toctext">Introduction</span></a></li>
<li class="toclevel-1"><a href="#Never.2C_Ever_Memorize_Code"><span class="tocnumber">2</span> <span class="toctext">Never, Ever Memorize Code</span></a></li>
<li class="toclevel-1"><a href="#Plan_Your_Project_Before_You_Begin"><span class="tocnumber">3</span> <span class="toctext">Plan Your Project Before You Begin</span></a>
<ul>
<li class="toclevel-2"><a href="#The_Requirements_Stage"><span class="tocnumber">3.1</span> <span class="toctext">The Requirements Stage</span></a></li>
<li class="toclevel-2"><a href="#The_Specifications_Phase"><span class="tocnumber">3.2</span> <span class="toctext">The Specifications Phase</span></a></li>
<li class="toclevel-2"><a href="#The_Design_Phase"><span class="tocnumber">3.3</span> <span class="toctext">The Design Phase</span></a></li>
<li class="toclevel-2"><a href="#The_Coding_Phase"><span class="tocnumber">3.4</span> <span class="toctext">The Coding Phase</span></a></li>
<li class="toclevel-2"><a href="#The_Debugging_Phase"><span class="tocnumber">3.5</span> <span class="toctext">The Debugging Phase</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Ask_For_Help"><span class="tocnumber">4</span> <span class="toctext">Ask For Help</span></a></li>
<li class="toclevel-1"><a href="#Never_Stop_Learning"><span class="tocnumber">5</span> <span class="toctext">Never Stop Learning</span></a></li>
</ul>
</td></tr></table><script type="text/javascript"> if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } </script>
<a name="Introduction" id="Introduction"></a><h2><span class="editsection">[<a href="/index.php?title=The_Process_of_Scripting&amp;action=edit&amp;section=1" title="Edit section: Introduction">edit</a>]</span> <span class="mw-headline">Introduction</span></h2>
<p>You've seen it. Swindler posts on the boards those long extensive posts, which can make huge scripts seem like simple, trivial tasks. Belgar posts something, which you read over, and wonder why you didn't think of it. Then, you sit down to write a script like theirs, and you end up with a 28kb script which can probably be condensed by at least 90%. I've done it. Swindler has done it. Belgar has done it. The difference is, we've all learned from our mistakes. 
</p><p><br />
So what do we have that you don't? It certainly isn't knowledge. If you read my tutorials, you will have an equal amount of knowledge as Belgar, Swindler, Kell, pmouse, or any of the other good scripters. None of them use techniques that will be beyond your scope. Does that make you stupid? Certainly not! There are some brilliant scripters on the boards, who cannot seem to put together a coherent program if their lives depended on it. 
</p><p><br />
Now, there are entire majors in college involving what I am about to summarize. I'm in one: software engineering. Yes, you read that right. The first person I said that to asked me if it was meant to be an oxymoron. You see, many new programmers have only been exposed to programming via movies and literature, where programmers are depicted as a single man in a dark room, who types code and then a program runs. That is absolutely nothing like the real world. But I won't get into that, because all we're dealing with is SPHERE scripting. 
</p><p><br />
This tutorial will be a lesson on learning. Doesn't that sound strange? Many people seem to have the idea in their minds that if they read a tutorial many times, and memorize every nuance of the scripting language, they will suddenly become a good scripter. And then they feel stupid when they post their incomprehensible scripts and a perfectionist comes along, cleans it up, and reduces it to three lines of code. 
</p><p><br />
</p>
<a name="Never.2C_Ever_Memorize_Code" id="Never.2C_Ever_Memorize_Code"></a><h2><span class="editsection">[<a href="/index.php?title=The_Process_of_Scripting&amp;action=edit&amp;section=2" title="Edit section: Never, Ever Memorize Code">edit</a>]</span> <span class="mw-headline">Never, Ever Memorize Code</span></h2>
<p>"But how am I supposed to learn this if I don't memorize code?" you are asking. Learning and memorizing are two different things, and use two different functions of the brain. If you memorize, you can regurgitate perfectly, for example, the objects you receive when the @DClick event fires, and what each of those objects represents. However, your brain has not realized that these objects are also related to other objects (for example, a person is related to everything he is wearing, and vice versa). 
</p><p><br />
The most common instance of this problem is trying to place items into a container that is not the backpack, or equipping them on someone else. A person in this situation will look through my reference database, and find that there is a command called BOUNCE which puts the referenced item into the backpack of the SRC (SRC is the person dclicking in this trigger), like so: 
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">ON=@DClick
    SRC.SAY The sword is mine!
    SERV.NEWITEM i_cool_sword
    NEW.BOUNCE
</pre>
<p><br />
The i_cool_sword item magically is placed into the backpack of the SRC. What most people don't seem to understand is that this piece of code is only one of many ways to achieve the same effect. For example, what if there is no SRC? What if this script is a @Timer script running on a memory object, where the player in question is that object's CONT or TOPOBJ? 
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">ON=@Timer
    CONT.SAY The sword is mine!
    SERV.NEWITEM i_cool_sword
    NEW.BOUNCE
</pre>
<p><br />
This will be the most common attempt to complete this script. However, it is WRONG . BOUNCE only places the item into the backpack of the SRC. In this case, there is no SRC, so the item will not move from its undefined location. In-game, no item will appear, because in theory, none was ever created in the real world. What we need to solve this problem is a different approach. One must realize how objects interact. What exactly do we want to do with this i_cool_sword? We desire to place it into the player's backpack. In other words, the player's backpack must become the container of the i_cool_sword. So why not just: 
</p><p><br />
</p>
<pre style="color: darkgreen; font-family: monospace; border: none;">ON=@Timer
    CONT.SAY The sword is mine!
    SERV.NEWITEM i_cool_sword
    NEW.CONT &lt;CONT.FINDLAYER.layer_backpack.UID&gt;
</pre>
<p><br />
Now what does this do? It looks more complicated, you're saying. Look at it for a moment. CONT contains the UID of the container of a particular item. In this script, we are SETTING that CONT object to be the UID of the player's backpack. We access the player's backpack object through the FINDLAYER function, and retrieve its UID. 
</p><p><br />
Now, if our scripter had learned the concepts behind containers and items, before memorizing the BOUNCE command, he would have realized that the code in green is the correct way to implement the solution. In fact, it is a far better method, because it is easily changable. For example, what if we want to place this item into the player's bank box instead of his backpack? We'd simply change layer_backpack to layer_bankbox, and it would be finished. No fancy functions, no new commands to learn. We're simply altering a command we already know to provide new functionality. 
</p><p><br />
That is step one in your becoming a proficient SPHERE scripter. You must learn to extend what you already know to provide new functionality. SPHERE scripting can do nearly anything. Yes, that's right. Anything. But how? You'll just have to sit back and think about it: 
</p><p><br />
</p>
<a name="Plan_Your_Project_Before_You_Begin" id="Plan_Your_Project_Before_You_Begin"></a><h2><span class="editsection">[<a href="/index.php?title=The_Process_of_Scripting&amp;action=edit&amp;section=3" title="Edit section: Plan Your Project Before You Begin">edit</a>]</span> <span class="mw-headline">Plan Your Project Before You Begin</span></h2>
<p>This is another result of the lone hacker syndrome that people pick up in the media. If you read a programming book, the entire beginning chapters will be on the proper design of a program. My entire major in college is devoted to the proper design of a functioning program. That's what I will be doing for the rest of my life, and being paid large sums of money to do so. 
</p><p><br />
All programming projects come in five stages: 
</p>
<ol><li> Requirements
</li><li> Specifications
</li><li> Design
</li><li> Coding
</li><li> Debugging
</li></ol>
<p><br />
This is known as the "software life cycle" and was one of the first things I was taught in my very first computer class as a software engineering student. Notice that you don't even begin to write lines of script until the second to last step of the process. 
</p><p><br />
</p>
<a name="The_Requirements_Stage" id="The_Requirements_Stage"></a><h3><span class="editsection">[<a href="/index.php?title=The_Process_of_Scripting&amp;action=edit&amp;section=4" title="Edit section: The Requirements Stage">edit</a>]</span> <span class="mw-headline">The Requirements Stage</span></h3>
<p>The requirements stage is simply the statement of the problem, and what you want your script to do:
</p><p><br />
"This in-game command .build should create a house which can be of any specified size and number of floors. The style of the walls, floor, and roof (which must be slanted) should also be specified. Houses always take rectangular form. The roof adjusts itself according to the length and width of the house. Houses which are narrower in the north-south direction should have a north-south facing roof, and the same is true for east-west houses."
</p><p><br />
That is a requirement. You know it as an idea. Notice that we have not yet even MENTIONED a scripting command. However, from the problem we should have a more general idea how we want our program to work. Next, we write the specifications of the problem. This is basically subdividing and conquering the problem, to make it easier. In the real world, different pieces of the problem would be handed off to different people. For example, one person might design the roof script, one might design the walls, and one might design the floor. Of course, as a SPHERE scripter, you rarely have the chance to work with anyone else. SPHERE scripting is simply not that type of programming language.
</p><p><br />
</p>
<a name="The_Specifications_Phase" id="The_Specifications_Phase"></a><h3><span class="editsection">[<a href="/index.php?title=The_Process_of_Scripting&amp;action=edit&amp;section=5" title="Edit section: The Specifications Phase">edit</a>]</span> <span class="mw-headline">The Specifications Phase</span></h3>
<p>Next, we reach the specifications stage of the project. This is slightly longer, and in my case, it takes the form of a numbered list: 
</p>
<ol><li> Retrieve the styles from the command line
</li><li> Use the styles to find the correct items to construct the house
</li><li> Set the variables to their defaults
</li><li> Build the current floor using the specified type
</li><li> Build the walls for the current floor
</li><li> If this is not the final floor, increment the Z location by 20, and start from step 4
</li><li> Otherwise, choose the appropriate roof type and build it
</li></ol>
<p>Doesn't the problem seem slightly easier now that you've laid out a plan? You COULD code at this point, but what if you made a mistake in your specification. Obviously, this is a rather small specification. This stage of the process, in the professional world, usually takes the form of a report which can be up to 100 pages in length. 
</p><p><br />
Next, we must subdivide further, and design how we are going to implement the specifications. 
</p><p><br />
</p>
<a name="The_Design_Phase" id="The_Design_Phase"></a><h3><span class="editsection">[<a href="/index.php?title=The_Process_of_Scripting&amp;action=edit&amp;section=6" title="Edit section: The Design Phase">edit</a>]</span> <span class="mw-headline">The Design Phase</span></h3>
<p>First, we see that several functions are going to be needed. Let's name them now and write down what they are supposed to do: 
</p><p><br />
<b>FUNCTION build</b><br />
This is the main function called by the command line. All it does is call other functions. 
</p>
<ol><li> Call function retrieve_cmd_line
</li><li> Check if the command line information was valid, and exit if not (we don't want to build a bad house)
</li><li> Call function get_style_data
</li><li> Call function variable_defaults
</li><li> Call function do_all_floors
</li><li> Call function do_roof
</li></ol>
<p><br />
<b>FUNCTION retrieve_cmd_line</b><br />
This function is a bit more difficult. We know that we need six pieces of information. What would be the best way to retrieve this information. If you read the tutorial correct, you know that we have a trick where we store the &lt;ARGS&gt; variable into the MOREP of an item, which we can then access as four different variables MOREX, MOREY, MOREZ, and MOREM. However, we need six, so where do the other two come from? The answer is, they don't. Why can we not store three different numbers into MOREX? If the user types 300, could this not be interpreted as a 3, a 0, and a 0? Therefore, our build command, must have the following parameters: 
</p><p><br />
</p>
<pre style="font-family: monospace; border: none;">.build [floor type][wall type][roof type] [width] [length] [number of floors]
</pre>
<p><br />
Notice that there are no spaces between the first three parameters. Now, here are the steps this function takes: 
</p>
<ol><li> Create a new i_memory item
</li><li> Store ARGS into the MOREP of that item
</li><li> Fill VAR.FLOORTYPE, VAR.ROOFTYPE, and VAR.WALLTYPE with the data from MOREX
</li><li> Fill VAR.WIDTH with MOREY
</li><li> Fill VAR.LENGTH with MOREZ
</li><li> Fill VAR.FLOORS with MOREM
</li></ol>
<p><br />
You get the idea. The design phase is where you lay out exactly what each part of your program should do. The idea is that any scripter should be able to take your design and create a working script from it. If I cannot understand your design, then chances are you cannot either, and you should either divide it farther, or explain it better. The reason you can all understand Swindler's scripts that he posts on the message boards is because he places his design comments directly within the scripts themselves. If not there, he certainly offers some explanation as to why his script is built the way it is. 
</p><p><br />
</p>
<a name="The_Coding_Phase" id="The_Coding_Phase"></a><h3><span class="editsection">[<a href="/index.php?title=The_Process_of_Scripting&amp;action=edit&amp;section=7" title="Edit section: The Coding Phase">edit</a>]</span> <span class="mw-headline">The Coding Phase</span></h3>
<p>Before you begin, CAREFULLY review your specifications to make sure that they meet the requirements. Also review your design to be sure it makes sense. If your find a mistake in an early stage of the Software Life Cycle, you must REDO all steps following it, because they will no longer be accurate. It is a terrible thing to develop a complete working script, and then find out that it doesn't do what you originally wanted it to do. Usually, that situation involves a complete rewrite of the script. When your scripts are over a thousand lines, that is a BAD thing. 
</p><p><br />
Now, implement your code one piece at a time. You should be able to develop it in the order specified in the design phase. If you cannot, there is something wrong with your design, and you need to go back and fix it. If you learned the scripting language enough, you should only have to consult the tutorial once or twice during your script. The design will make the steps obvious. 
</p><p><br />
</p>
<a name="The_Debugging_Phase" id="The_Debugging_Phase"></a><h3><span class="editsection">[<a href="/index.php?title=The_Process_of_Scripting&amp;action=edit&amp;section=8" title="Edit section: The Debugging Phase">edit</a>]</span> <span class="mw-headline">The Debugging Phase</span></h3>
<p>This phase is endless. A quote I read one time goes something like this: 
</p><p><br />
<i>"It is twice as difficult to debug a program as to write it. Therefore, if you put all of your creativity and effort into writing the program, you are not smart enough to debug it."</i>
</p><p><br />
However, that doesn't mean you can't go look for help. Chances are, this is the step where you will approach the members of the SPHERE community for help. However, don't blindly post help. First, check for typos. The biggest source of errors is simple typos. Did you type&nbsp;! where you mean ~? Did you type a ( where you wanted to insert a &lt;? Those simple errors cause innumerable problems. Also, check to see if your EVAL statements have that closing bracket. <i><tt>&lt;EVAL</tt> will not work, but <tt>&lt;EVAL &amp;ltVAR.HELLO&gt;&gt; will.</tt></i>
</p><p><br />
In fact, today in my computer science class, the instructor had two variables. In SPHERE, they would be called VAR.BOLD and VAR.ITALIC. Here is what her program would have looked like, translated into the SPHERE language: 
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">IF (&lt;some condition&gt;)
    VAR.BOLD = 1
ELSE
    VAR.BOLD = 0
ENDIF
IF (&lt;some other condition&gt;)
    VAR.ITALIC = 1
ELSE
    VAR.BOLD = 0
ENDIF
</pre>
<p><br />
See the problem? Obviously the VAR.BOLD in the second ELSE should be VAR.ITALIC. This caused the very interesting effect that when you deselected the "italicized" option in her program, the text stayed italic, and lost its boldness instead. We spent 10 minutes trying to find the error. Fortunately, she had 50 people in the class to help her find it. 
</p><p><br />
</p>
<a name="Ask_For_Help" id="Ask_For_Help"></a><h2><span class="editsection">[<a href="/index.php?title=The_Process_of_Scripting&amp;action=edit&amp;section=9" title="Edit section: Ask For Help">edit</a>]</span> <span class="mw-headline">Ask For Help</span></h2>
<p>Never be afraid to ask someone else for help. However, there are certain rules that you are expected to follow when seeking help. Before seeking help from a person, try to find the answer yourself. Not only will you learn more in the process, but chances are you won't make the same mistake again. 
</p><p><br />
After this fails, post a message on the message boards. Do NOT send someone a message on ICQ begging that person to help you. This is simply common courtesy. If you do not receive a satisfactory answer on the message boards, resort to ICQ. My ICQ number is listed on the main page. However, if I do not respond to your first message, do not continue to message me saying "Hello?" and "Are you there? I need some help?" every five minutes. That is an excellent way to end up on my or any other expert's ignore list. If I do not respond, I am busy. 
</p><p><br />
The method in which you ask for help is also very useful. First, clearly define the problem you are trying to solve. This does not help at all: 
</p><p><br />
</p>
<pre style="color: orange; font-family: monospace; border: none;">SUBJECT:  HELP!!!!!!!!!!!!!!11111

Why doesn't this script work????///  I've tried everything and it won't work!  WHY?!?1/1/  HELP ME!

IF&nbsp;!&lt;EVAL &lt;ARGTXT[1]&gt; &gt;
    SRC.SYSMESSAGE You MUST enter a valid price!!
    DIALOG d_auction_item
ELSE
    VAR.CURRENTPRICE=&lt;EVAL 0&lt;ACT.TAG.ITEM&lt;EVAL &lt;TAG.SELECTED&gt; &gt;PRICE&gt; &gt;
    IF (&lt;VAR.CURRENTPRICE&gt; &lt;&lt;EVAL &lt;ARGTXT[1]&gt; &gt;
        VAR.BID=&lt;EVAL &lt;ARGTXT[1]&gt; &gt;
        IF (&lt;SRC.FINDLAYER(LAYER_BANKBOX).RESCOUNT i_gold&gt; &lt;&lt;EVAL &lt;VAR.BID&gt; &gt;)
            SRC.SYSMESSAGE Sorry, you don't have enough money in your bank box to bid that.
        ELSE
            TRYP 0 ACT.TAG.ITEM&lt;EVAL &lt;TAG.SELECTED&gt; &gt;PRICE=&lt;EVAL &lt;VAR.BID&gt; &gt;
            SRC.SYSMESSAGE You bid &lt;EVAL &lt;VAR.BID&gt; &gt; gold on the item!
            SRC.CONSUMEGOLD &lt;eval &lt;var.bid&gt; &gt;
            //SYSMESSAGE ACT=&lt;ACT.TAG.ITEM&lt;EVAL &lt;TAG.SELECTED&gt; &gt;TIMERMEM&gt;
            ACT=&lt;ACT.TAG.ITEM&lt;EVAL &lt;TAG.SELECTED&gt; &gt;TIMERMEM&gt;
            ACT.TAG.HIGHBID=&lt;EVAL &lt;VAR.BID&gt; &gt;
            VAR.OLDHIGHBIDDER=&lt;ACT.LINK&gt;
            ACT.LINK=&lt;SRC.UID&gt;
            // Give the previous bidder his money back, since he lost
            // The owner of the item gets no money back, it's his risk
            IF &lt;EVAL &lt;VAR.OLDHIGHBIDDER&gt; &gt;!=&lt;ACT.MORE&gt;
                SRC.NEWITEM=i_gold
                SRC.ACT.AMOUNT=&lt;eval &lt;var.currentprice&gt; &gt;
                TRYP 0 SRC.ACT.CONT=&lt;UID.OLDHIGHBIDDER.FINDLAYER(LAYER_BANKBOX).UID&gt;
            ENDIF
        ENDIF
    ELSEIF (&lt;VAR.CURRENTPRICE&gt; ==&lt;EVAL &lt;ARGTXT[1]&gt; &gt;)
        SRC.AUCTION
    ELSE
        SRC.SYSMESSAGE You must bid MORE than the previous bidder!
    ENDIF
ENDIF
</pre>
<p><br />
Can you tell me what that script is supposed to do? Can you tell me how it fits into the entire system? There are context clues (for example, the presence of ARGTXT) that would suggest that it belongs in a gump button section, but other than that, we have no idea what it is supposed to do. We also don't know where all these mysterious objects, like ACT, are coming from. None of the code is indented either, so we have spend ten times longer than we should, just to work out what's happening in that particular piece of code.
</p><p><br />
Also, learn to hold down the shift key for the entire time you are typing&nbsp;! or&nbsp;? characters. &nbsp;!!!!111 and&nbsp;???// are irritating to see. 
</p><p><br />
</p>
<a name="Never_Stop_Learning" id="Never_Stop_Learning"></a><h2><span class="editsection">[<a href="/index.php?title=The_Process_of_Scripting&amp;action=edit&amp;section=10" title="Edit section: Never Stop Learning">edit</a>]</span> <span class="mw-headline">Never Stop Learning</span></h2>
<p>You will never learn all of the SPHERE language. Even I don't know all of the language. Even Swindler doesn't. We are both constantly learning and figuring out new ways to use old concepts. Well, he is, I have stopped scripting to continue my writing. That is the only way you will become better at scripting. That is the only way that you will ever reach a level where you can help other people. 
</p><p><br />
I will end this lesson on design by introducing you to something interesting known as Bloom's Taxonomy. It was developed by a researcher in the 1950s, I believe, and it lays out the process in which the human mind learns information. It works in a hierarchy. You start on the bottom step (Knowledge) and cannot move your way upward until you complete that step. Here is Bloom's Taxonomy in SPHERE terms: 
</p><p><br />
<b>Step 1: KNOWLEDGE</b><br />
This is the step where all new scripters enter the process. You have probably never seen a program before. You don't understand logic. You don't understand how the variables work. This is the stage where you learn how to place your brackets and parentheses correctly. You also learn the majority of the scripting commands here and most of the objects. Read over other people's scripts and try to make sense of them. This step is mostly that memorization I told you avoid. Leave it as fast as possible! If you continue to memorize, rather than comprehend scripts, you will never leave this level of learning. 
</p><p><br />
<b>Step 2: COMPREHENSION</b><br />
This is the step where most scripters are lost. Unfortunately, as you can see, it is the second step. You must understand not only WHAT to type, but WHY. For example, in my above example using the CONT vs BOUNCE, you must understand why BOUNCE is an inappropriate choice for that situation, and you must understand how the objects are interacting. Continue to study other people's scripts, and try to understand not only THAT they work, but how they work. 
</p><p><br />
<b>Step 3: APPLICATION</b><br />
Script, script, script. You know what to do, and why to do it. Now do it. Practice. Chances are you'll learn more in the process. Don't be afraid to ask for help. 
</p><p><br />
<b>Step 4: ANALYSIS</b><br />
This is the step where you can compare and contrast methods of scripting. Those of you who have reached this stage are very far along indeed. It is those people who find the technical errors in my scripting techniques, and will probably ICQ me about errors in this very tutorial. You should not begin helping others with scripting until you reach this stage. 
</p><p><br />
<b>Step 5: SYNTHESIS</b><br />
This is where the fun begins. This is where you begin taking old things and make new things. You begin designing your own library of functions to make your life easier. You begin posting complex scripts onto the message boards, with the full design document attached. You also are revered as a high member of the SPHERE community. Chances are that if you have reached this stage, you are able to post scripted bugfixes to many of the problems with the current release of the software. You've been around a while, and are probably ready for a much-deserved break from SPHERE. 
</p><p><br />
<b>Step 6: EVALUATION</b><br />
Unfortunately, since SPHERE is a closed-source project, this option is unavailable. Generally, it would make you think about how to improve the system, like I tried to do when I suggested the TARGET function to the SPHERE devs back in version .42, when no one thought targeting was possible. Just be as cordial as possible in the process.
</p>
<!-- 
NewPP limit report
Preprocessor node count: 39/1000000
Post-expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key d00b020c:pcache:idhash:28-0!1!0!!en!2 and timestamp 20120714140135 -->
<div class="printfooter">
Retrieved from "<a href="http://wiki.sphere.torfo.org/index.php/The_Process_of_Scripting">http://wiki.sphere.torfo.org/index.php/The_Process_of_Scripting</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/index.php/Special:Categories" title="Special:Categories">Category</a>:&#32;<span dir='ltr'><a href="/index.php/Category:Articles" title="Category:Articles">Articles</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/index.php/The_Process_of_Scripting" title="View the content page [c]" accesskey="c">Page</a></li>
				 <li id="ca-talk" class="new"><a href="/index.php?title=Talk:The_Process_of_Scripting&amp;action=edit&amp;redlink=1" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/index.php?title=The_Process_of_Scripting&amp;action=edit" title="You can edit this page.&#10;Please use the preview button before saving [e]" accesskey="e">Edit</a></li>
				 <li id="ca-history"><a href="/index.php?title=The_Process_of_Scripting&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>
				 <li id="ca-move"><a href="/index.php/Special:MovePage/The_Process_of_Scripting" title="Move this page [m]" accesskey="m">Move</a></li>
				 <li id="ca-watch"><a href="/index.php?title=The_Process_of_Scripting&amp;action=watch" title="Add this page to your watchlist [w]" accesskey="w">Watch</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-userpage"><a href="/index.php/User:Ben" title="Your user page [.]" accesskey="." class="new">Ben</a></li>
				<li id="pt-mytalk"><a href="/index.php/User_talk:Ben" title="Your talk page [n]" accesskey="n" class="new">My talk</a></li>
				<li id="pt-preferences"><a href="/index.php/Special:Preferences" title="Your preferences">My preferences</a></li>
				<li id="pt-watchlist"><a href="/index.php/Special:Watchlist" title="The list of pages you are monitoring for changes [l]" accesskey="l">My watchlist</a></li>
				<li id="pt-mycontris"><a href="/index.php/Special:Contributions/Ben" title="List of your contributions [y]" accesskey="y">My contributions</a></li>
				<li id="pt-logout"><a href="/index.php?title=Special:UserLogout&amp;returnto=The_Process_of_Scripting" title="Log out">Log out</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://wiki.sphere.torfo.org/images/SphereWiki.png);" href="/index.php/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/index.php/Special:Search" id="searchform"><div>
				<input id="searchInput" name="search" type="text" title="Search SphereWiki [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search the pages for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/index.php/Main_Page">Main Page</a></li>
				<li id="n-recentchanges"><a href="/index.php/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-randompage"><a href="/index.php/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li>
				<li id="n-SphereServer-Forum"><a href="http://www.sphereserver.net">SphereServer Forum</a></li>
				<li id="n-help"><a href="/index.php/Help:Contents" title="The place to find out">Help</a></li>
			</ul>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-Setting_Up_Sphere'>
		<h5>Setting Up Sphere</h5>
		<div class='pBody'>
			<ul>
				<li id="n-Where-To-Get-Sphere"><a href="/index.php/Where_to_get_Sphere">Where To Get Sphere</a></li>
				<li id="n-Installing-Sphere"><a href="/index.php/Installing_Sphere">Installing Sphere</a></li>
				<li id="n-Configuring-Sphere.ini"><a href="/index.php/Configuring_Sphere.ini">Configuring Sphere.ini</a></li>
			</ul>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-Reference_Compendium'>
		<h5>Reference Compendium</h5>
		<div class='pBody'>
			<ul>
				<li id="n-Definitions"><a href="/index.php/Category:Definitions">Definitions</a></li>
				<li id="n-Objects"><a href="/index.php/Category:Objects">Objects</a></li>
				<li id="n-Scripts"><a href="/index.php/Category:Scripts">Scripts</a></li>
			</ul>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-Tutorial_Chapters'>
		<h5>Tutorial Chapters</h5>
		<div class='pBody'>
			<ul>
				<li id="n-Chapter-One"><a href="/index.php/Chapter_1">Chapter One</a></li>
				<li id="n-Chapter-Two"><a href="/index.php/Chapter_2">Chapter Two</a></li>
				<li id="n-Chapter-Three"><a href="/index.php/Chapter_3">Chapter Three</a></li>
				<li id="n-Chapter-Four"><a href="/index.php/Chapter_4">Chapter Four</a></li>
				<li id="n-Chapter-Five"><a href="/index.php/Chapter_5">Chapter Five</a></li>
				<li id="n-Chapter-Six"><a href="/index.php/Chapter_6">Chapter Six</a></li>
				<li id="n-Chapter-Seven"><a href="/index.php/Chapter_7">Chapter Seven</a></li>
				<li id="n-Chapter-Eight"><a href="/index.php/Chapter_8">Chapter Eight</a></li>
				<li id="n-Chapter-Nine"><a href="/index.php/Chapter_9">Chapter Nine</a></li>
				<li id="n-Chapter-Ten"><a href="/index.php/Chapter_10">Chapter Ten</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/index.php/Special:WhatLinksHere/The_Process_of_Scripting" title="List of all wiki pages that link here [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/index.php/Special:RecentChangesLinked/The_Process_of_Scripting" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-specialpages"><a href="/index.php/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/index.php?title=The_Process_of_Scripting&amp;printable=yes" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/index.php?title=The_Process_of_Scripting&amp;oldid=212" title="Permanent link to this version of the page">Permanent link</a></li>			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 7 June 2009, at 18:09.</li>
					<li id="viewcount">This page has been accessed 1,544 times.</li>
					<li id="privacy"><a href="/index.php/SphereWiki:Privacy_policy" title="SphereWiki:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/index.php/SphereWiki:About" title="SphereWiki:About">About SphereWiki</a></li>
					<li id="disclaimer"><a href="/index.php/SphereWiki:General_disclaimer" title="SphereWiki:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Piwik -->
<script type="text/javascript">
var pkBaseURL = (("https:" == document.location.protocol) ? "https://sphere.torfo.org/piwik/" : "http://sphere.torfo.org/piwik/");
document.write(unescape("%3Cscript src='" + pkBaseURL + "piwik.js' type='text/javascript'%3E%3C/script%3E"));
</script><script type="text/javascript">
try {
var piwikTracker = Piwik.getTracker(pkBaseURL + "piwik.php", 4);
piwikTracker.trackPageView();
piwikTracker.enableLinkTracking();
} catch( err ) {}
</script>
<!-- End Piwik Tag -->
<!-- Served in 0.513 secs. --></body></html>
