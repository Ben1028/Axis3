<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.14.0" />
		<meta name="keywords" content="Chapter 9,De:Chapter 9,En:Chapter 9,Chapter 9,Es:Chapter 9,Fr:Chapter 9,Ja:Chapter 9,Tr:Chapter 9,@Kill,Chapter 8,Wiki Translation" />
		<link rel="alternate" type="application/x-wiki" title="Edit" href="http://wiki.sphere.torfo.org/index.php?title=Chapter_9&amp;action=edit" />
		<link rel="edit" title="Edit" href="http://wiki.sphere.torfo.org/index.php?title=Chapter_9&amp;action=edit" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/opensearch_desc.php" title="SphereWiki (en)" />
		<link rel="alternate" type="application/rss+xml" title="SphereWiki RSS Feed" href="http://wiki.sphere.torfo.org/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="SphereWiki Atom Feed" href="http://wiki.sphere.torfo.org/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Chapter 9 - SphereWiki</title>
		<link rel="stylesheet" href="/skins/common/shared.css?195" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins/common/commonPrint.css?195" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins/monobook/main.css?195" type="text/css" media="screen" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins/monobook/IE50Fixes.css?195" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins/monobook/IE55Fixes.css?195" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins/monobook/IE60Fixes.css?195" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins/monobook/IE70Fixes.css?195" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=18000&amp;action=raw&amp;maxage=18000" type="text/css" />
		<link rel="stylesheet" href="/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=18000&amp;action=raw&amp;maxage=18000" type="text/css" media="print" />
		<link rel="stylesheet" href="/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=18000&amp;action=raw&amp;maxage=18000" type="text/css" />
		<link rel="stylesheet" href="/index.php?title=-&amp;action=raw&amp;maxage=18000&amp;smaxage=0&amp;ts=20120630142713&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins/common/IEFixes.js?195"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins";
		var wgArticlePath = "/index.php/$1";
		var wgScriptPath = "";
		var wgScript = "/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://wiki.sphere.torfo.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Chapter_9";
		var wgTitle = "Chapter 9";
		var wgAction = "view";
		var wgArticleId = "11";
		var wgIsArticle = true;
		var wgUserName = "Ben";
		var wgUserGroups = ["*", "user", "autoconfirmed"];
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = "687";
		var wgVersion = "1.14.0";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		var wgAjaxWatch = {"watchMsg": "Watch", "unwatchMsg": "Unwatch", "watchingMsg": "Watching...", "unwatchingMsg": "Unwatching..."};
		/*]]>*/</script>

		<script type="text/javascript" src="/skins/common/wikibits.js?195"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins/common/ajax.js?195"></script>
		<script type="text/javascript" src="/skins/common/ajaxwatch.js?195"></script>
		<script type="text/javascript" src="/index.php?title=-&amp;action=raw&amp;smaxage=0&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Chapter_9 skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
				<h1 id="firstHeading" class="firstHeading">Chapter 9</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From SphereWiki</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<div style="margin: 0px; padding: 2px 2px 0px 2px; border: none; border-collapse:collapse; clear:both;">
<span style="float:right; font-weight:normal; font-size: x-small;"><a href="/index.php/Wiki_Translation" title="Wiki Translation">Help</a></span><div style="background-color:#e9e9e9; border-style:solid; border-width:1px; border-color:#aaa; padding: 0pt 4pt 8pt 4pt; font-size: 95%; text-align:center;"><b>Available languages</b></div>
<div style="border: 1px solid #aaa; background-color: #f9f9f9; border-collapse:collapse; font-size: 95%; padding: 2pt 4pt 2pt 4pt; margin: 0px;">          • <span lang="en"><strong class="selflink">English</strong></span>                                         
</div>
</div>
<div class="NavFrame" style="border:none; clear:none; margin: 0px; padding-top: 0px;">
<div class="NavHead" style="background-color:#e9e9e9; border-style:solid; border-width:1px; border-color:#aaa; margin: 0px; padding: 0pt 4pt 8pt 4pt; font-size: 95%;"><b>Missing languages</b></div>
<div class="NavContent" style="border: 1px solid #aaa; background-color: #f9f9f9; border-collapse:collapse; font-size: 95%; padding: 2pt 4pt 2pt 4pt;">        • <span lang="de"><a href="/index.php?title=De:Chapter_9&amp;action=edit&amp;redlink=1" class="new" title="De:Chapter 9 (page does not exist)">Deutsch</a></span>    • <span lang="es"><a href="/index.php?title=Es:Chapter_9&amp;action=edit&amp;redlink=1" class="new" title="Es:Chapter 9 (page does not exist)">Español</a></span>    • <span lang="fr"><a href="/index.php?title=Fr:Chapter_9&amp;action=edit&amp;redlink=1" class="new" title="Fr:Chapter 9 (page does not exist)">Français</a></span>           • <span lang="ja"><a href="/index.php?title=Ja:Chapter_9&amp;action=edit&amp;redlink=1" class="new" title="Ja:Chapter 9 (page does not exist)">日本語</a></span>                  • <span lang="tr"><a href="/index.php?title=Tr:Chapter_9&amp;action=edit&amp;redlink=1" class="new" title="Tr:Chapter 9 (page does not exist)">Türkçe</a></span>     
</div>
</div><div class="NavFrame" style="border:none;display:none;"></div>
<p><br />
</p>
<table id="toc" class="toc" summary="Contents"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1"><a href="#How_to_.22install.22_.5BEVENTS.5D"><span class="tocnumber">1</span> <span class="toctext">How to "install" [EVENTS]</span></a></li>
<li class="toclevel-1"><a href="#The_order_of_event_handling"><span class="tocnumber">2</span> <span class="toctext">The order of event handling</span></a></li>
<li class="toclevel-1"><a href="#Item-based_events"><span class="tocnumber">3</span> <span class="toctext">Item-based events</span></a></li>
<li class="toclevel-1"><a href="#Environmental_Events"><span class="tocnumber">4</span> <span class="toctext">Environmental Events</span></a>
<ul>
<li class="toclevel-2"><a href="#Information_for_Advanced_Scripters"><span class="tocnumber">4.1</span> <span class="toctext">Information for Advanced Scripters</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#The_Clicky_Events"><span class="tocnumber">5</span> <span class="toctext">The Clicky Events</span></a></li>
<li class="toclevel-1"><a href="#NPC-based_Events"><span class="tocnumber">6</span> <span class="toctext">NPC-based Events</span></a></li>
<li class="toclevel-1"><a href="#The_Elusive_.40Death_Event"><span class="tocnumber">7</span> <span class="toctext">The Elusive @Death Event</span></a></li>
<li class="toclevel-1"><a href="#Combat_Events"><span class="tocnumber">8</span> <span class="toctext">Combat Events</span></a></li>
</ul>
</td></tr></table><script type="text/javascript"> if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } </script>
<a name="How_to_.22install.22_.5BEVENTS.5D" id="How_to_.22install.22_.5BEVENTS.5D"></a><h2><span class="editsection">[<a href="/index.php?title=Chapter_9&amp;action=edit&amp;section=1" title="Edit section: How to &quot;install&quot; [EVENTS]">edit</a>]</span> <span class="mw-headline">How to "install" [EVENTS]</span></h2>
<p>A basic event looks like the following: 
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">[EVENTS defname]
code
</pre>
<p><br />
Looks just like every other thing we've done so far doesn't it? Well events work the same way. They can be installed either in-game our through a script using the following:
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">EVENTS +defname
EVENTS=defname
EVENTS -defname
</pre>
<p><br />
These are three very different commands. Some people tend to confuse them. Here is what they do: 
</p><p><br />
<b>EVENTS +DEFNAME</b><br />
Adds the event to the character's list of events. Yes, a character can have more than one event. Both of the following will respond to triggers called on the character: 
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">SRC.EVENTS +e_death_event
SRC.EVENTS +e_ctf_event
</pre>
<p><br />
<b>EVENTS=DEFNAME</b><br />
This method is should not be used. It will erase all other events on the character in place of this one. 
</p><p><br />
<b>EVENTS -DEFNAME</b><br />
This will remove the specified event from the character. 
</p><p><br />
<i><b>THE DEFAULT OBJECT OF AN [EVENTS] SCRIPT IS THE CHARACTER ON WHICH THE SCRIPT IS INSTALLED.</b></i>
</p><p><br />
</p>
<a name="The_order_of_event_handling" id="The_order_of_event_handling"></a><h2><span class="editsection">[<a href="/index.php?title=Chapter_9&amp;action=edit&amp;section=2" title="Edit section: The order of event handling">edit</a>]</span> <span class="mw-headline">The order of event handling</span></h2>
<p>There are quite a few ways to add events to items or characters. These are: 
</p><p><br />
<i><b>EVENTS +DEFNAME</b></i><br />
Can be set by a function, another event, a player action, or inside a trigger (for example, the @Create trigger). 
</p><p><br />
<i><b>TEVENTS=DEFNAME</b></i><br />
In the body of the ITEMDEF or CHARDEF. There may be as many of TEVENTS lines as you wish. 
</p><p><br />
<i><b>TYPE=DEFNAME</b></i><br />
(Items only) In the body of the ITEMDEF. There can only be ONE base type definition. TYPEs are not only events, they also determine some basic behaviour of the item, and it's capabilities (for example, if an item is not of an equippable type, it cannot be equipped). 
</p><p><br />
<i><b>DIRECT TRIGGERS</b></i><br />
Poor man's events: As events are generally assortments of triggers what can be added to an item or character. You may also "hardcode" some trigger actions in the ITEMDEF/CHARDEF itself. 
</p><p><br />
<i><b>ORDER OF FIRING</b></i><br />
Look at these simple code examples: 
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">[ITEMDEF i_triggertester]
ID=i_floor_wood
TYPE = t_testtype
NAME=TriggerTester
TEVENTS=e_tev_test

ON=@Create
    EVENTS +e_ev_test
    
ON=@DClick
    SERV.LOG item dclick from direct trigger
    
[TYPEDEF e_ev_test]
ON=@DClick
    SERV.LOG dclick from event
    
[TYPEDEF e_tev_test]
ON=@DClick
    SERV.LOG item dclick from tevent
    
[TYPEDEF t_testtype]
ON=@DClick
    SERV.LOG item dclick from base typedef
</pre>
<p><br />
This gives the following results: 
</p><p><tt>item dclick from event<br />
item dclick from tevent<br />
item dclick from base typedef<br />
item dclick from direct trigger<br /></tt>
</p><p><br />
The same for characters:
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">[CHARDEF c_testorc]
ID=c_orc
NAME=TestOrc
TEVENTS=e_tev_character

ON=@Create
    STR = 100
    
ON=@NPCRestock
    EVENTS +e_ev_character
    
ON=@DClick
    SERV.LOG char dclick from direct trigger
    
[EVENTS e_tev_character]
ON=@DClick
    SERV.LOG char dclick from tevent
    
[EVENTS e_ev_character]
ON=@DClick
    SERV.LOG char dclick from event
</pre>
<p><br />
The results: 
</p><p><tt>char dclick from event<br />
char dclick from tevent<br />
char dclick from direct trigger<br /></tt>
</p><p><br />
</p>
<a name="Item-based_events" id="Item-based_events"></a><h2><span class="editsection">[<a href="/index.php?title=Chapter_9&amp;action=edit&amp;section=3" title="Edit section: Item-based events">edit</a>]</span> <span class="mw-headline">Item-based events</span></h2>
<p>There are two main types of events: 
</p><p><br />
<b>ITEM EVENT</b><br />
Triggered when any player interacts in a certain way with a given item. 
</p><p><br />
<b>PLAYER EVENT</b><br />
Triggered when a given player interacts in a certain way with ANY item or performs certain tasks, such as moving, casting a spell, crafting an item, etc. 
</p><p><br />
In the item script, the item is the default object. In the player script, the player is the default object. 
</p><p><br />
So what are these events? Well here's a short list of some of them: 
</p><p><br />
<tt>@itemDClick  - Triggered when the player double-clicks any item.  The reference object for the item is ACT.<br />
@itemEquip   - Triggered when the player equips any item.  The reference object for the item is ACT.<br />
@itemUnEquip - Triggered when the player unequips any item.  The reference object for the item is ACT.<br />
@itemClick   - Triggered when the player double-clicks any item.  The reference object for the item is ACT.<br />
@itemStep    - Triggered when the player steps on any item.  The reference object for the item is ACT.<br /></tt>
</p><p><br />
Notice anything similar between those descriptions? If you don't, I think you need to go back and take reading lessons. That's right. In ANY script beginning with @item, ACT is the item acted upon. How about that. Why do you suppose they called it ACT? 
</p><p><br />
In any case, for @item scripts, the following is true: 
</p><p><br />
<tt>ACT = the item acted upon<br />
SRC = the character doing the acting (the player with the event)<br /> 
[]  = the character doing the acting (the player with the event)<br /></tt>
</p><p><br />
Notice that in this case, SRC and the default object both refer to the character. THIS IS NOT ALWAYS THE CASE. If you want to refer to the character, get in the habit of using the default object rather than SRC in an event. Now, let's take a look at a rather useless event:
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">[EVENTS e_test_events]
ON=@itemStep
    SYSMESSAGE You have stepped on &lt;ACT.NAME&gt;!
    RETURN 0
</pre>
<p><br />
Put this script in one of your files and resync your server. Now, go in-game and type: <font color="darkred">.xevents +e_test_events</font> Target yourself. Congratulations, you just installed an event on yourself. From this point forward, until you remove the event, any time you walk on an item, you'll get an irritating message. Try it. Go around walking on things! Make an item called "a bug" and walk around stepping on them. 
</p><p><br />
Ok stop walking on things and continue reading now.&nbsp;:) 
</p><p><br />
Here's a little secret I bet you've already guessed: ALL ITEM EVENTS (except @Timer) HAVE AN @item COUNTERPART. This means that @itemPickUp_Pack, @itemTargOn_Char, @itemTargOn_Item, and all others should all (in theory) work.
</p><p><br />
</p>
<a name="Environmental_Events" id="Environmental_Events"></a><h2><span class="editsection">[<a href="/index.php?title=Chapter_9&amp;action=edit&amp;section=4" title="Edit section: Environmental Events">edit</a>]</span> <span class="mw-headline">Environmental Events</span></h2>
<p>This chapter serves to explain only one event, because we need to introduce some concepts beforehand. The first concept we're going to introduce is that of the <b>SECTOR</b>. In the game, the map is divided not only into regions, but into sectors as well. Sectors represent portions of the map that by default are 64 tiles wide and 64 tiles high. They can overlap between regions (for example, one sector is the upper corner of Britain and most of the Britain graveyard). They hold information such as light level, weather, and complexity information. 
</p><p><br />
Also, the world is divided vertically into bands, which we shall call LOCAL areas here. This is used for the purpose of realistic fading of light during sunsets and a real "revolving" world effect. 
</p><p><br />
How do we manipulate these sectors? Well, there is a SECTOR object that is available to you in any script, and it refers to the sector in which the specific object sits. This SECTOR object has a VERY limited number of variables and functions: 
</p><p><br />
<b>COMPLEXITY</b><br />
Returns the number of characters (both PC and NPC) in the sector. This is useful if you have a huge effect-based script and you don't want to lag up everyone in a sector. It's also useful so NPCs don't spam huge portions of speech in crowded areas. If you look in the speech files provided with the game, you'll see this in use. 
</p><p><br />
<b>SEASON &lt;integer&gt;</b><br />
One of the most interesting features of the SECTOR, this controls which "seasonal" graphics the client displays. The values you can pass to this function are: 
</p><p><br />
</p>
<table border="1">
<tr>
<td> <b>Value</b> </td><td> <b>Description</b>
</td></tr>
<tr>
<td> 0 </td><td> Spring time season (lots of flowers)
</td></tr>
<tr>
<td> 1 </td><td> Summer time season (this is the default)
</td></tr>
<tr>
<td> 2 </td><td> Fall season (all trees have "fall" leaves and there are a lot of mushrooms)
</td></tr>
<tr>
<td> 3 </td><td> Winter season (the ground is covered in snow and the trees have no leaves)
</td></tr>
<tr>
<td> 4 </td><td> Dead season (no leaves on trees, gravestones and gore everywhere)
</td></tr></table>
<p><br />
<b>LIGHT &lt;level&gt;</b><br />
Holds a value between 0 and 30 that represents the light level, with 0 being full daylight and 30 being pitch black. On pre-T2A clients, 18 is the darkest LIGHT value. If you give it a value, it will set the light to that level. If not, it will set the light level to whatever its default value happens to be at that time. (See LOCALLIGHT.) 
</p><p><br />
<b>LOW</b><br />
Actually used - COMPLEXITY.LOW. Returns 1 if the complexity is within the "low" level.
</p><p><br />
<b>MEDIUM</b><br />
Actually used - COMPLEXITY.MEDIUM. Returns 1 if the complexity is within the "medium" level.
</p><p><br />
<b>HIGH</b><br />
Actually used - COMPLEXITY.HIGH. Returns 1 if the complexity is within the "high" level.
</p><p><br />
<b>ALLCLIENTS &lt;function call&gt;</b><br />
This can be used just like SERV.ALLCLIENTS or REGION.ALLCLIENTS. Any function given here will be executed on any player in the SECTOR. This is not a wise one to use, because the player could in fact be in a different sector than you expect.
</p><p><br />
<b>RAIN</b><br />
This makes it rain for all players in the sector.
</p><p><br />
<b>SNOW</b><br />
Makes it snow for all players in the sector. (Doing SECTOR.RAIN, then SECTOR.SNOW is interesting. You get this weird rain/snow mix.) 
</p><p><br />
<b>DRY</b><br />
Turns off both rain and snow.
</p><p><br />
<b>RESTOCK</b><br />
Causes all spawnpoints to double-click themselves and reset any spawns in the area. Useful if you just changed the loot on something. 
</p><p><br />
<b>ISDARK</b><br />
Tests the light level of the sector to see if it is below a "dark" threshold. 
</p><p><br />
<b>ISNIGHTTIME</b><br />
There is a clock that is kept in LOCAL areas, like timezones in real life. This checks the clock to see if it is "night" in the area. It does not necessarily have to be dark. 
</p><p><br />
<b>LOCALTOD</b><br />
Returns the LOCAL time of day for this "time zone". 
</p><p><br />
<b>LOCALTIME</b><br />
Returns the LOCAL time in a format like this: "quarter past seven in the evening" 
</p><p><br />
<b>LOCALLIGHT</b><br />
The light level in unaltered sectors in this LOCAL area. Used by LIGHT when you call that function without parameters. 
</p><p><br />
</p><p>Now, back to what we were originally discussing. 
</p><p><br />
The event associated with the SECTOR is <b>@EnvironChange</b>. This is a surprisingly useful event because it fires every time ANY of those sector variables are changed. That includes LOCALTIME, meaning that @EnvironChange will fire approximately once every ten seconds. (It depends on the speed of the game clock on your server.) 
</p><p><br />
This makes @EnvironChange the only repeating event for characters. (Actually there is another, but you haven't learned about REGION functions yet.) This may not seem very useful, but let's take a look at a script from the sphere_events_human.scp file. 
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">[EVENTS e_Human_Environ]
ON=@EnvironChange	// 1
    IF (&lt;FLAGS&gt; &amp; statf_war)	// 2
        RETURN 0
    ENDIF
    IF&nbsp;!(&lt;SECTOR.ISDARK&gt;) || (&lt;FLAGS&gt; &amp; statf_nightsight)	// 3
        IF (&lt;FINDLAYER.layer_hand2&gt;)	// 4
            IF (&lt;FINDLAYER.layer_hand2.TYPE&gt; == t_light_lit)
                FINDLAYER.layer_hand2.BOUNCE
            ENDIF
        ENDIF
        RETURN 0
    ENDIF
    // already have a lit light&nbsp;? (5)
    IF (&lt;FINDLAYER.layer_hand2&gt;)	// 6
        IF (&lt;FINDLAYER.layer_hand2.TYPE&gt; == t_light_lit)
            RETURN 0
        ENDIF
    ENDIF
    // type to use a torch or light source if I have one. (and it's dark) (7)
    IF (&lt;FINDTYPE.t_light_out&gt;)	// 8
        FINDTYPE.t_light_out.EQUIP
        FINDTYPE.t_light_out.USE
    ENDIF
    RETURN 0
</pre>
<p><br />
Well, this is different. This is our first rather complicated example script, so let's take it slowly. First of all, you can see it's in an [EVENTS] section, with the defname of e_Human_Environ. (If you look through spherechar_human.scp, you'll see this event installed a lot on the NPCs.) This script makes the character equip a torch, if he has one, based on the light level. It's a cool event when it becomes night and all your NPCs are walking around town with torches to light their way. Basically, this script has the following steps:
</p>
<ol><li> When the SECTOR changes, the event fires 
</li><li> We check to see if the character is in war mode by checking his FLAGS using the &amp; operator. If he is, we don't want him to do anything, so we RETURN from the script immediately. 
</li><li> Next, we check the character's sector to see if it's dark. In the same IF statement we check to see if the NPC has the Nightsight FLAGS set. If he does, he can't tell that it's dark anyway, and so it doesn't matter if he has a torch or not. According to the structure of our IF statement, it becomes true if SECTOR.ISDARK is NOT true (!) OR (||) <tt>&lt;FLAGS&gt; &amp; statf_nightsight</tt> evaluates to true.
</li><li> If it is NOT dark outside, OR the character has nightsight on, we don't want him to have a torch equipped, so we check his hand (layer_hand2) for a torch. IF he has one, we use the BOUNCE function on the torch to place it in the character's backpack. The script then RETURNs. 
</li><li> The next section of the script is only reached if it is BOTH dark outside and the character does not have nightsight on. 
</li><li> It checks to see if there is already a light in the character's hand (layer_hand2). If there is, we don't need to equip another one so the script exits. You must always do a check like this in these kinds of scripts. Remember, @EnvironChange will take effect almost once every ten seconds. We don't want him equipping a new torch every ten seconds. 
</li><li> The only possible way to reach this point in the script is if the following conditions have been met: it is dark outside, the character does NOT have nightsight, and there is no torch equipped on the character. 
</li><li> The very last section checks to see if the character has any torches equipped in his backpack. Remember, FINDTYPE will return the first instance of an object of a given type (in this case t_light_out) in the character or any sub-containers (his backpack). 
</li></ol>
<p><br />
So what's a REAL use for this event that doesn't involve torches? Well, if you look through sphereevents.scp, you'll find another [EVENTS] section called e_undead, which makes dead creatures very very weak when it's light outside, and their normal strength at night. It uses a TAG to temporarily store their normal strength. 
</p><p><br />
You'll see another use for the @EnvironChange event at the end of the chapter. I take advantage of the fact that it's a periodic event (that is, it repeats a lot). 
</p><p><br />
And a final piece of advise for you to think about:
</p><p><i>Be careful when calling functions that change the environment (i.e. changing season, weather, light), from within the @EnvironChange trigger</i>.
</p><p>Remember that the @EnvironChange triggers fires when SECTOR properties change? What do you think might happen if you if used the following script?
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">// don't run this!
ON=@EnvironChange
    SECTOR.LIGHT += 1
    RETURN 0
</pre>
<p><br />
Do you see what is going to happen? The sector's light is going to be incremented by 1 when the trigger fires, but when this happens the trigger will fire again because the environment has been changed, and this will cause the light to be incremented again, which will cause the trigger to fire again, which will cause the light to be incremented again... Quite clearly, this is not a good thing and your server will crash or freeze within seconds of this script running. If you must insist on changing the environment under the @EnvironChange trigger then you must put in a conditional statement which will prevent the server from entering an infinite loop, for example:
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">ON=@EnvironChange
    IF (&lt;SECTOR.LIGHT&gt;&nbsp;!= 5)
        SECTOR.LIGHT = 5
    ENDIF
    RETURN 0
</pre>
<p><br />
This will set the light level to 5, but only if it is not 5 already (Sphere is already intelligent enough to not fire the trigger again if you set the LIGHT to the same value it already had, but the idea should be clear)
</p><p><br />
</p>
<a name="Information_for_Advanced_Scripters" id="Information_for_Advanced_Scripters"></a><h3><span class="editsection">[<a href="/index.php?title=Chapter_9&amp;action=edit&amp;section=5" title="Edit section: Information for Advanced Scripters">edit</a>]</span> <span class="mw-headline">Information for Advanced Scripters</span></h3>
<p>There is a way to refer to all of the sectors within a region. It works a little like ALLCLIENTS, in that it will run a function on all sectors. This is a good way to change the season for an entire region. If a region is contained within another (i.e. Britain contained within Britain Territory), it will be affected if you use this command on the surrounding region. 
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">REGION.SECTORS
</pre>
<p>For example: 
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">REGION.SECTORS SEASON 3
</pre>
<p>This will set all sectors in the region to the "winter" season. Keep in mind that sectors can "overlap" regions, meaning that you may get some winter in other surrounding regions as well.
</p><p><br />
</p>
<a name="The_Clicky_Events" id="The_Clicky_Events"></a><h2><span class="editsection">[<a href="/index.php?title=Chapter_9&amp;action=edit&amp;section=6" title="Edit section: The Clicky Events">edit</a>]</span> <span class="mw-headline">The Clicky Events</span></h2>
<p><b>@DClick, @Click, and @Profile</b><br />
These events are surprisingly underused since they have so many specific purposes. Here's a summary of what they do: 
</p><p><br />
<b>@Click</b><br />
User has been clicked by someone.
</p><p><br />
<b>@DClick</b><br />
User has been double-clicked by someone.
</p><p><br />
<b>@Profile</b><br />
Someone is trying to look at the user's profile.
</p><p><br />
Now, these are three events where the RETURN value is exceedingly important. All of them have very expected default actions, such as the following: 
</p><p><br />
</p>
<table>
<tr>
<td> <b>Trigger</b> </td><td> <b>Default Action</b>
</td></tr>
<tr>
<td> @Click </td><td> The character's name pops up above his head (An allnames macro counts as @Click)
</td></tr>
<tr>
<td> @DClick </td><td> The character's paperdoll pops up
</td></tr>
<tr>
<td> @Profile </td><td> The character's personal profile pops up
</td></tr></table>
<p><br />
Now, if you RETURN 0 or 2 from any of these events, the default action will take place. The user's name will pop up as usual, or their paperdoll will appear on the clicker's screen. But there are occasions where you don't want this to happen. For example, I created an event for one of my custom spells which allowed the user to double-click any creature for a given amount of time and shoot fireballs at that player. 
</p><p><br />
Here's an example script for the @Click event. This puts [MURDERER] above the player's name when he's clicked if his kills are above a certain amount. I had something similar on my server Talocon where new players (players with skills below a certain level) received a [NEWBIE] tag and certain protections. 
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">[EVENTS e_murderer]
ON=@Click
    IF (&lt;KILLS&gt; &gt; 5)
        MESSAGE [MURDERER]
    ENDIF
    RETURN 0  // Display his name
</pre>
<p><br />
We want to use a message here, rather than a SYSMESSAGE or a SAY so the text appears above the default object. In this case that's the player containing this event. SRC happens to be the player doing the clicking. It could be the same if someone clicks him- or herself, but that's usually not the case. 
</p><p><br />
(Remember, to install the events, we use the command in-game .events +e_murderer. In a script we use the same command without the dot.) 
</p><p><br />
We RETURN 0 from this event so that the player's name will actually be displayed. We could easily use a MESSAGE to put the player's name above his head, but it wouldn't be in the specific color necessary. 
</p><p><br />
Here's an example of the @DClick event. The effect of this event is to prevent players from seeing paperdolls of those outside of their guild. You'll also learn here how to check whether or not two people are in the same guild. 
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">ON=@DClick
    IF (&lt;SRC.UID&gt; == &lt;UID&gt;) // did the player double click himself?
        RETURN 0
    ELSEIF (&lt;SRC.MEMORYFINDTYPE.memory_guild.LINK.UID&gt;) &amp;&amp; (&lt;SRC.MEMORYFINDTYPE.memory_guild.LINK&gt; == &lt;MEMORYFINDTYPE.memory_guild.LINK&gt;)
        SRC.SYSMESSAGE You are in the same guild.  You may view this paperdoll.
        RETURN 0 // let them see the paperdoll
    ENDIF
    RETURN 1         // don't
</pre>
<p><br />
I don't know if you'd want to use this event in your shard or not. Remember, it's up to you what your shard is like! 
</p><p><br />
Perhaps the most unused event is @Profile. It could be incredibly useful for various applications on a server. 
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">ON=@Profile
    DIALOG d_info
    RETURN 1
</pre>
<p><br />
You should have learned about dialogs in <a href="/index.php/Chapter_8" title="Chapter 8">Chapter 8</a>. For now you need to know that this script would make a dialog called d_info appear on the screen of the SRC (the profile clicker). Perhaps contained in this dialog could be information about the person whose profile has been clicked. It may be that you want to include an IF statement like so: 
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">ON=@Profile
    IF (&lt;SRC.ISGM&gt;)
        DIALOG d_info_gm
    ELSE
        DIALOG d_info
    ENDIF
</pre>
<p><br />
This would check first to see if the user was a GM and display a different amount of information. You've seen in <a href="/index.php/Chapter_8" title="Chapter 8">Chapter 8</a> how you can customize the appearance of this dialog down to the most detailed level. 
</p><p><br />
These are just a few applications of these events. As you can probably imagine, as with anything else in SPHERE, the applications are limitless.
</p><p><br />
</p>
<a name="NPC-based_Events" id="NPC-based_Events"></a><h2><span class="editsection">[<a href="/index.php?title=Chapter_9&amp;action=edit&amp;section=7" title="Edit section: NPC-based Events">edit</a>]</span> <span class="mw-headline">NPC-based Events</span></h2>
<p>Hmm, you may be saying. How do we tell if an event can be used on a player or just on NPCs? (Remember, " NPC " means any computer-controlled character, be it a monster, a vendor, a banker, or anything) 
</p><p>Well, there's a rather easy way. Let's look at a list of some NPC-only events:
</p><p><br />
</p>
<pre style="color: darkgreen; font-family: monospace; border: none;">@NPCAcceptItem   // NPC accepts item (needs)
@NPCHearGreeting // hear greeting (can be triggered by most speech i found)
@NPCHearNeed     // someone mentions sopmething i want (needs)
@NPCHearUnknown  // rather obvious
@NPCRefuseItem   // NPC don't want this (needs)
@NPCRestock      //vendor/ npc restocks.. Auto called at on=@Create
@NPCSeeNewPlayer // see new player
@NPCSeeWantItem  //see something i want (needs)
</pre>
<p><br />
Those aren't my comments.&nbsp;:) Something else you'll notice is that some of them comment about this concept of NEEDS. We'll cover that in this section as well. Actually, why don't we cover that first? 
</p><p><br />
If you look in an NPC script, it'll have a property called DESIRES. It looks something like this: 
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">DESIRES=i_gold
</pre>
<p><br />
This means that the NPC wants gold. It's a NEED of this NPC to acquire gold. He wouldn't be happy otherwise. And we all know what happens when you get an NPC angry. (They say "Shut up and fight, coward!") Other NPC needs are, for example, fire for fire elementals, or t_crops for crows. Sometimes there's even t_grass for animals like sheep. But humans don't need to eat. All they need is money. I believe that an NPC will also accept any item that it sells (someone verify this).
</p><p><br />
Now that you understand this concept of desires and needs, here's a more descriptive list of these events: 
</p><p><br />
</p>
<pre style="color: darkgreen; font-family: monospace; border: none;">@NPCAcceptItem   - An item is dropped onto the NPC and identified as one of the NEEDS of this NPC. RETURN 1 will bounce the item back to where it came from. The item is stored in ACT.
@NPCHearGreeting - Someone speaks directly to this NPC who hadn't spoken to him before. The NPC will remember for a short time that the player talked to him. (See later chapters on memory.)
@NPCHearNeed     - Someone says the name of one of the needs of the NPC. Such as &quot;gold&quot;. In this event, the variable &lt;needname&gt; will print out the name of the need that was spoken.
@NPCHearUnknown  - Someone says something the NPC does not understand. This is where the &quot;Huh?&quot; and &quot;I don't understand thee!&quot; come from.
@NPCRefuseItem   - An item is dropped onto the NPC that he has no NEED for. The item is bounced back to where it came from. The item is stored in ACT.
@NPCRestock      - This occurs about once every half hour. BUY and SELL items should be placed under this event, along with any loot and clothing you want on your NPC. This is also called on creation of the NPC (since technically, he IS restocking for the first time).
@NPCSeeNewPlayer - The most useful of the NPC events, this one fires when the NPC sees a player he didn't previously see. RETURN 1 from this event will prevent the NPC from remembering that he has seen the player, and RETURN 0 will let him remember.
@NPCSeeWantItem  - The NPC sees something he wants on the ground and walks toward it.
</pre>
<p><br />
Now let's see some examples of the use of these events. The examples that come with SPHERE (i.e. in sphereevents.scp in the 55i package) are huge and complex and deal with a lot of sector complexity and karma issues to determine which response to give. Each event has about 30 potential spoken responses. 
</p><p><br />
So here's a simpler example using what I see as the most useful of events. This could, for example, be placed on a new NPC to give him special abilities. We're going to assume that when this NPC is standing still, he is invisible. Actually in the last section, you're going to see the completed script for this NPC. 
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">ON=@NPCSeeNewPlayer
    IF (&lt;DISTANCE&gt; &gt; 5) // If the player is more than 5 steps away
        RETURN 1  // Don't remember him so the event fires when he gets closer
    ENDIF
    // We can only get this far if he is closer than 5 steps away
    SAY Boo!
    INVIS 0
    ATTACK // Attacks the SRC of the event
    RETURN 0
</pre>
<p><br />
This simple script would make a surprisingly diverse number of creatures with just a few variations. Do you understand it? Well, if you don't here's my explanation: 
</p>
<ol><li> The NPC sees a player it doesn't remember seeing before and the event takes place. 
</li><li> We check to see how far away the player is. DISTANCE will return the distance the object referenced (in this case the default object) is from the SRC of the event (in this case the player who is being seen). If the player is too far away, we don't want the NPC to react. This event fires as soon as the creature first notices a player nearby, meaning up to about 12 tiles away depending on the player's resolution. We return 1 here so the NPC will forget that he saw the player and the event will fire again a second or so later. 
</li><li> If the player is close enough, the NPC appears (INVIS 0) and says "Boo!" to scare the player. It then proceeds to attack him. We RETURN 0 at the end of this second section because we don't need the NPC to forget the player again. 
</li></ol>
<p><br />
This is a rather simple script, and you'll see one big example that utilizes almost every useful character-based event.
</p><p><br />
</p>
<a name="The_Elusive_.40Death_Event" id="The_Elusive_.40Death_Event"></a><h2><span class="editsection">[<a href="/index.php?title=Chapter_9&amp;action=edit&amp;section=8" title="Edit section: The Elusive @Death Event">edit</a>]</span> <span class="mw-headline">The Elusive @Death Event</span></h2>
<p>Here are the object references available to you from within the @Death trigger:
</p><p><br />
<tt>@Death Objects<br />
&nbsp;&nbsp;SRC = the creature being killed<br />
&nbsp;&nbsp;[] = the creature being killed<br /></tt>
</p><p><br />
Any experienced admin will have encountered a particular obstacle when using this trigger. How do we know who killed the player? For a long time ACT was considered to be the killer, and many still believe this is the case. In fact, if you were to right now add an @Death trigger to a player, kill them, and check their ACT. You would more than likely discover that ACT did indeed point to the killer, yet here I am telling you that <b>ACT is _NOT_ the killer in @Death!</b>
</p><p><br />
You can protest all you like, but it is a simple fact that the ACT reference is completely meaningless within the @Death trigger. ACT is used by various internal systems and means different things. For example if you were to get a player to craft an item and then target them <font color="darkred">.xhits 0</font> they will die, and you will discover that ACT actually points to the item the player was crafting with!
</p><p><br />
If you want to determine who killed someone, there are two safe ways of doing so:
</p>
<ul><li> Use the <a href="/index.php/@Kill" title="@Kill">@Kill</a> trigger, which fires when one character kills another (not discussed in this chapter)
</li><li> Use the <a href="/index.php?title=ATTACKER&amp;action=edit&amp;redlink=1" class="new" title="ATTACKER (page does not exist)">ATTACKER</a> property, which allows you to access a full list of characters which have harmed a character.
</li></ul>
<p><br />
Anyway, back to the topic at hand.
</p><p><br />
Have you ever played Asheron's Call or Everquest? When you die in either of those games, you are returned to a particular location of your choosing, but you must choose the location prior to death. We're going to make a system similar to that. Here's the script, and then I'll explain it: 
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">[PLEVEL 1]
deathpoint

[FUNCTION deathpoint]
IF (&lt;REGION.FLAGS&gt; &amp; region_flag_guarded)  // Are they in a guarded area?
    // If so, we need to set this as their new death location.
    TAG.DEATH_LOC = &lt;P&gt;
    EVENTS +e_death
ENDIF
RETURN 1

[EVENTS e_death]
ON=@Death
    IF (&lt;BRAIN&gt;)  // We don't want this script on NPCs by accident (player brain  = 0 = false)
        RETURN 0
    ENDIF
    RESURRECT // Prevent death
    IF&nbsp;!(&lt;ISEMPTY &lt;TAG.DEATH_LOC&gt;&gt;) // make sure the TAG has is not empty/blank
        GO &lt;TAG.DEATH_LOC&gt;
    ELSE  // No tag, send them to a default location, such as Britain
        GO Britain
    ENDIF
    RETURN 1 // No death recorded, no corpse left behind
</pre>
<p><br />
I think that this requires a little explanation. First, we use a function differently than we've seen in the past: 
</p><p><br />
This is an in-game command. You use it by typing .deathpoint in-game. In an in-game function, the objects are as follows: The person executing the function is the SRC. If they would type .xdeathpoint rather than .deathpoint, they would get a target. The target of the function is the default object. 
</p><p><br />
When the player uses this function, we check to see if he's in a town. The purpose of this function is to let the player decide the place he goes when he dies. It can be any location as long as it's within the guarded area. So if he is in a guarded area, we simply store his current position into a TAG. We also install the event e_death on the player. Look over it until you understand what's going on. There's nothing here we haven't seen before. 
</p><p><br />
The next part is an [EVENTS] section, which contains an @Death event. (Duh.) I think that the only part of this script that isn't things we've done before (or explained rather clearly in the comments) is the purpose of the &lt;ISEMPTY ...&gt; function in the middle of the event. Say, by some strange fluke in the game, this player has the e_death event installed, but the value for TAG.DEATH_LOC hasn't been set yet. When the @Death script is triggered (by the death of the player), we run into the following statement: 
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">GO &lt;TAG.DEATH_LOC&gt;
</pre>
<p><br />
If TAG.DEATH_LOC has no value, this statement is meaningless and you WILL get an error. So we use the following statement to check if it has a value: 
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">IF&nbsp;!(&lt;ISEMPTY &lt;TAG.DEATH_LOC&gt;&gt;)
</pre>
<p><br />
If the tag does have a value, this will evaluate to some scary number, which is not blank and therefore true. If it has no value, the statement simply becomes <tt>IF&nbsp;!(&lt;ISEMPTY &gt;)</tt>, which of course is false.
</p><p><br />
The @Death event can be a powerful tool if used wisely. A few other things it could be used for: 
</p>
<ol><li> Special race abilities (i.e. Last Chance, Final Attack type abilities)
</li><li> A leveling system where NPCs have the @Death event to give experience to the killer
</li><li> What you just saw up above 
</li></ol>
<p><br />
Like I said in the beginning, this tutorial isn't here to give you free scripts. It's here to teach you HOW to script. Although in two more sections you're going to get a free script all for yourself! Can you wait? &nbsp;:)
</p><p><br />
</p>
<a name="Combat_Events" id="Combat_Events"></a><h2><span class="editsection">[<a href="/index.php?title=Chapter_9&amp;action=edit&amp;section=9" title="Edit section: Combat Events">edit</a>]</span> <span class="mw-headline">Combat Events</span></h2>
<p><b>@Hit, @GetHit, @SpellEffect, @SpellCast</b><br />
These are some fun events. They can also cause your server to crash, which we'll get to in just a minute here. Let's look at the objects associated with each one now:
</p><p><br />
<b>@Hit</b><br />
<tt>SRC = The character being hit<br />
[] = The character doing the hitting<br />
ACT = The character being hit<br /></tt>
</p><p><br />
<b>@GetHit</b><br />
<tt>SRC = The character doing the hitting<br />
[] = The character being hit<br />
ARGN1 = The amount of damage done<br />
ARGN2 = The type of damage done<br /></tt>
</p><p><br />
<b>@SpellEffect</b><br />
<tt>SRC = The character casting the spell<br />
[] = The character being hit by the spell<br />
ARGN1 = The spell number (or defname, look in sphere_spells.scp)<br />
ARGN2 = The spell strength<br /></tt>
</p><p><br />
<b>@SpellCast</b><br />
<tt>SRC = The character casting the spell<br />
TARG = The target of the spell<br />
ARGN1 = The spell number (or defname)<br /></tt>
</p><p><br />
These are very useful events, especially the @Hit and @SpellEffect events. You can use @Hit to make an NPC do a spell-type attack rather than a normal attack, if you wanted to. I'm going to show you an example that Swindler and I came up with a while back. You can use @SpellEffect to make a character immune to certain spells, or make certain spells do more damage. You can use @SpellCast to prevent the character from casting certain spells. 
</p><p><br />
Here's the full text of the @Hit portion of one of our scripts: 
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">ON=@Hit
    IF&nbsp;!(RAND(10))
        SRC.EFFECT = 3,i_fire_column,6,31,0
        SRC.DAMAGE {20 40}
        SFX = snd_spell_flamestrike
        ELIF&nbsp;!(RAND(15))
        SFX = 0054
        SERV.NEWITEM = i_sakara_fire
        NEW.TIMER = 15
        NEW.P = &lt;SRC.P&gt;
        NEW.MOVE &lt;EVAL (RAND(6))&gt; &lt;EVAL (RAND(6))&gt;
        SERV.NEWITEM = i_sakara_fire
        NEW.TIMER = 15
        NEW.P = &lt;SRC.P&gt;
        NEW.MOVE &lt;EVAL (RAND(6))&gt; &lt;EVAL (RAND(6))&gt;
        SERV.NEWITEM = i_sakara_fire
        NEW.TIMER = 15
        NEW.P = &lt;SRC.P&gt;
        NEW.MOVE &lt;EVAL (RAND(6))&gt; &lt;EVAL (RAND(6))&gt;
        SERV.NEWITEM = i_sakara_fire
        NEW.TIMER = 15
        NEW.P = &lt;SRC.P&gt;
        NEW.MOVE &lt;EVAL (RAND(6))&gt; &lt;EVAL (RAND(6))&gt;
        SERV.NEWITEM = i_sakara_fire
        NEW.TIMER = 15
        NEW.P = &lt;SRC.P&gt;
        NEW.MOVE &lt;EVAL (RAND(6))&gt; &lt;EVAL (RAND(6))&gt;
        SERV.NEWITEM = i_sakara_fire
        NEW.TIMER = 15
        NEW.P = &lt;SRC.P&gt;
        NEW.MOVE &lt;EVAL (RAND(6)) - (RAND(6))&gt; &lt;EVAL (RAND(6)) - (RAND(6))&gt;
        SERV.NEWITEM = i_sakara_fire
        NEW.TIMER = 15
        NEW.P = &lt;SRC.P&gt;
        NEW.MOVE &lt;EVAL (RAND(6)) - (RAND(6))&gt; &lt;EVAL (RAND(6)) - (RAND(6))&gt;
        SERV.NEWITEM = i_sakara_fire
        NEW.TIMER = 15
        NEW.P = &lt;SRC.P&gt;
        NEW.MOVE &lt;EVAL (RAND(6)) - (RAND(6))&gt; &lt;EVAL (RAND(6)) - (RAND(6))&gt;
        SERV.NEWITEM = i_sakara_fire
        NEW.TIMER = 15
        NEW.P = &lt;SRC.P&gt;
        NEW.MOVE &lt;EVAL (RAND(6)) - (RAND(6))&gt; &lt;EVAL (RAND(6)) - (RAND(6))&gt;
        SERV.NEWITEM = i_sakara_fire
        NEW.TIMER = 15
        NEW.P = &lt;SRC.P&gt;
        NEW.MOVE &lt;EVAL (RAND(6)) - (RAND(6))&gt; &lt;EVAL (RAND(6)) - (RAND(6))&gt;
    ENDIF
</pre>
<p><br />
You obviously don't have the rest of this script, but just know that i_sakara_fire is a valid item and it won't cause an error. Actually it's a fire field-looking item that does a lot of damage if you step on it. 
</p><p><br />
You'll see a few interesting things in here. First of all is Swindler's creative use of the RAND function in an IF statement. This assures that the special effects only happen rarely. The two effects we're dealing with here, if you can't tell from the script, are: 
</p>
<ol><li> A single flamestrike on the player (1 in 10 chance of happening) 
</li><li> An explosion that leaves i_sakara_fire scattered all over the place (1 in 15 chance) 
</li></ol>
<p><br />
The IF statements assure that we only have a 1 in 10 chance for the first event to happen. When RAND(10) is evaluated (all statements in an IF are sent through EVAL), it picks a number from 0 to 9. In this particular situation, we're looking for that 1 in 10 chance that the RAND(10) evaluates to zero. This makes the IF statement false, but look, we have the NOT (!) symbol in there: 
</p><p><br />
<i>IF (! false) becomes IF (true) </i>
</p><p><br />
If the first random statement results in a zero, we get the flamestrike effect. There are several methods of doing this, but Swindler chose to use an EFFECT (see the command list) statement and some damage. He also added a sound effect, which is something I always forget to do in my scripts. It makes it very impressive to those who actually play with their sound on. 
</p><p><br />
If the first statement results in anything other than a zero, it becomes false, thanks to the NOT symbol. We skip to the next section, which begins with ELIF. This is the section which creates a lot of items and uses SRC.ACT.MOVE to move them relative to their original position. These items happen to be i_sakara_fire items, which cause some damage when a player steps on them. Here's the part you may be having some trouble with: 
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">SRC.ACT.MOVE &lt;EVAL (RAND(6)) - (RAND(6))&gt; &lt;EVAL (RAND(6)) - (RAND(6))&gt;
</pre>
<p><br />
This is Swindler's very interesting way to get values between -5 and 5. You could just as easily write a random selector {-6 6}. However Swindler's method seems to have this interesting factor built in that the numbers tend be more likely to be closer to zero than -5 or 5. Let's see how that works: 
</p><p><br />
RAND(X) will return a number between 0 and (X - 1). For example RAND(9) returns any number between 0 and 8. So the lowest possible value of Swindler's RAND(6) is 0 and the highest possible value is 5. Notice that we have two of them: 
</p><p><tt>RAND(6) - RAND(6)</tt>
</p><p><br />
We're subtracting one number between 0 and 5 from another. If one happens to be 0 and the other is 5, the answer will be 0 - 5  =  -5. If it is the other way around, the answer will be 5 - 0 = 5. However, as we get closer to the middle, the numbers are the same. There is more of a chance of receiving a small number (3 - 2 = 1, 2 - 1 = 1, 4 - 3 = 1, etc) than a large one. This makes the script more interesting!&nbsp;:) Don't deny it. It's interesting. Say it. "This script is interesting." Now shut up and keep reading.
</p>
<!-- 
NewPP limit report
Preprocessor node count: 424/1000000
Post-expand include size: 3359/2097152 bytes
Template argument size: 593/2097152 bytes
Expensive parser function count: 8/100
-->

<!-- Saved in parser cache with key d00b020c:pcache:idhash:11-0!1!0!!en!2 and timestamp 20120714134523 -->
<div class="printfooter">
Retrieved from "<a href="http://wiki.sphere.torfo.org/index.php/Chapter_9">http://wiki.sphere.torfo.org/index.php/Chapter_9</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/index.php/Special:Categories" title="Special:Categories">Category</a>:&#32;<span dir='ltr'><a href="/index.php/Category:Tutorials" title="Category:Tutorials">Tutorials</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/index.php/Chapter_9" title="View the content page [c]" accesskey="c">Page</a></li>
				 <li id="ca-talk" class="new"><a href="/index.php?title=Talk:Chapter_9&amp;action=edit&amp;redlink=1" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/index.php?title=Chapter_9&amp;action=edit" title="You can edit this page.&#10;Please use the preview button before saving [e]" accesskey="e">Edit</a></li>
				 <li id="ca-history"><a href="/index.php?title=Chapter_9&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>
				 <li id="ca-move"><a href="/index.php/Special:MovePage/Chapter_9" title="Move this page [m]" accesskey="m">Move</a></li>
				 <li id="ca-watch"><a href="/index.php?title=Chapter_9&amp;action=watch" title="Add this page to your watchlist [w]" accesskey="w">Watch</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-userpage"><a href="/index.php/User:Ben" title="Your user page [.]" accesskey="." class="new">Ben</a></li>
				<li id="pt-mytalk"><a href="/index.php/User_talk:Ben" title="Your talk page [n]" accesskey="n" class="new">My talk</a></li>
				<li id="pt-preferences"><a href="/index.php/Special:Preferences" title="Your preferences">My preferences</a></li>
				<li id="pt-watchlist"><a href="/index.php/Special:Watchlist" title="The list of pages you are monitoring for changes [l]" accesskey="l">My watchlist</a></li>
				<li id="pt-mycontris"><a href="/index.php/Special:Contributions/Ben" title="List of your contributions [y]" accesskey="y">My contributions</a></li>
				<li id="pt-logout"><a href="/index.php?title=Special:UserLogout&amp;returnto=Chapter_9" title="Log out">Log out</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://wiki.sphere.torfo.org/images/SphereWiki.png);" href="/index.php/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/index.php/Special:Search" id="searchform"><div>
				<input id="searchInput" name="search" type="text" title="Search SphereWiki [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search the pages for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/index.php/Main_Page">Main Page</a></li>
				<li id="n-recentchanges"><a href="/index.php/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-randompage"><a href="/index.php/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li>
				<li id="n-SphereServer-Forum"><a href="http://www.sphereserver.net">SphereServer Forum</a></li>
				<li id="n-help"><a href="/index.php/Help:Contents" title="The place to find out">Help</a></li>
			</ul>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-Setting_Up_Sphere'>
		<h5>Setting Up Sphere</h5>
		<div class='pBody'>
			<ul>
				<li id="n-Where-To-Get-Sphere"><a href="/index.php/Where_to_get_Sphere">Where To Get Sphere</a></li>
				<li id="n-Installing-Sphere"><a href="/index.php/Installing_Sphere">Installing Sphere</a></li>
				<li id="n-Configuring-Sphere.ini"><a href="/index.php/Configuring_Sphere.ini">Configuring Sphere.ini</a></li>
			</ul>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-Reference_Compendium'>
		<h5>Reference Compendium</h5>
		<div class='pBody'>
			<ul>
				<li id="n-Definitions"><a href="/index.php/Category:Definitions">Definitions</a></li>
				<li id="n-Objects"><a href="/index.php/Category:Objects">Objects</a></li>
				<li id="n-Scripts"><a href="/index.php/Category:Scripts">Scripts</a></li>
			</ul>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-Tutorial_Chapters'>
		<h5>Tutorial Chapters</h5>
		<div class='pBody'>
			<ul>
				<li id="n-Chapter-One"><a href="/index.php/Chapter_1">Chapter One</a></li>
				<li id="n-Chapter-Two"><a href="/index.php/Chapter_2">Chapter Two</a></li>
				<li id="n-Chapter-Three"><a href="/index.php/Chapter_3">Chapter Three</a></li>
				<li id="n-Chapter-Four"><a href="/index.php/Chapter_4">Chapter Four</a></li>
				<li id="n-Chapter-Five"><a href="/index.php/Chapter_5">Chapter Five</a></li>
				<li id="n-Chapter-Six"><a href="/index.php/Chapter_6">Chapter Six</a></li>
				<li id="n-Chapter-Seven"><a href="/index.php/Chapter_7">Chapter Seven</a></li>
				<li id="n-Chapter-Eight"><a href="/index.php/Chapter_8">Chapter Eight</a></li>
				<li id="n-Chapter-Nine"><a href="/index.php/Chapter_9">Chapter Nine</a></li>
				<li id="n-Chapter-Ten"><a href="/index.php/Chapter_10">Chapter Ten</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/index.php/Special:WhatLinksHere/Chapter_9" title="List of all wiki pages that link here [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/index.php/Special:RecentChangesLinked/Chapter_9" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-specialpages"><a href="/index.php/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/index.php?title=Chapter_9&amp;printable=yes" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/index.php?title=Chapter_9&amp;oldid=687" title="Permanent link to this version of the page">Permanent link</a></li>			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 26 November 2010, at 16:19.</li>
					<li id="viewcount">This page has been accessed 7,187 times.</li>
					<li id="privacy"><a href="/index.php/SphereWiki:Privacy_policy" title="SphereWiki:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/index.php/SphereWiki:About" title="SphereWiki:About">About SphereWiki</a></li>
					<li id="disclaimer"><a href="/index.php/SphereWiki:General_disclaimer" title="SphereWiki:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Piwik -->
<script type="text/javascript">
var pkBaseURL = (("https:" == document.location.protocol) ? "https://sphere.torfo.org/piwik/" : "http://sphere.torfo.org/piwik/");
document.write(unescape("%3Cscript src='" + pkBaseURL + "piwik.js' type='text/javascript'%3E%3C/script%3E"));
</script><script type="text/javascript">
try {
var piwikTracker = Piwik.getTracker(pkBaseURL + "piwik.php", 4);
piwikTracker.trackPageView();
piwikTracker.enableLinkTracking();
} catch( err ) {}
</script>
<!-- End Piwik Tag -->
<!-- Served in 0.713 secs. --></body></html>
