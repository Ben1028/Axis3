<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.14.0" />
		<meta name="keywords" content="Chapter 7,De:Chapter 7,En:Chapter 7,Chapter 7,Es:Chapter 7,Fr:Chapter 7,Ja:Chapter 7,Tr:Chapter 7,Wiki Translation" />
		<link rel="alternate" type="application/x-wiki" title="Edit" href="http://wiki.sphere.torfo.org/index.php?title=Chapter_7&amp;action=edit" />
		<link rel="edit" title="Edit" href="http://wiki.sphere.torfo.org/index.php?title=Chapter_7&amp;action=edit" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/opensearch_desc.php" title="SphereWiki (en)" />
		<link rel="alternate" type="application/rss+xml" title="SphereWiki RSS Feed" href="http://wiki.sphere.torfo.org/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="SphereWiki Atom Feed" href="http://wiki.sphere.torfo.org/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Chapter 7 - SphereWiki</title>
		<link rel="stylesheet" href="/skins/common/shared.css?195" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins/common/commonPrint.css?195" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins/monobook/main.css?195" type="text/css" media="screen" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins/monobook/IE50Fixes.css?195" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins/monobook/IE55Fixes.css?195" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins/monobook/IE60Fixes.css?195" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins/monobook/IE70Fixes.css?195" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=18000&amp;action=raw&amp;maxage=18000" type="text/css" />
		<link rel="stylesheet" href="/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=18000&amp;action=raw&amp;maxage=18000" type="text/css" media="print" />
		<link rel="stylesheet" href="/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=18000&amp;action=raw&amp;maxage=18000" type="text/css" />
		<link rel="stylesheet" href="/index.php?title=-&amp;action=raw&amp;maxage=18000&amp;smaxage=0&amp;ts=20120630142713&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins/common/IEFixes.js?195"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins";
		var wgArticlePath = "/index.php/$1";
		var wgScriptPath = "";
		var wgScript = "/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://wiki.sphere.torfo.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Chapter_7";
		var wgTitle = "Chapter 7";
		var wgAction = "view";
		var wgArticleId = "9";
		var wgIsArticle = true;
		var wgUserName = "Ben";
		var wgUserGroups = ["*", "user", "autoconfirmed"];
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = "685";
		var wgVersion = "1.14.0";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		var wgAjaxWatch = {"watchMsg": "Watch", "unwatchMsg": "Unwatch", "watchingMsg": "Watching...", "unwatchingMsg": "Unwatching..."};
		/*]]>*/</script>

		<script type="text/javascript" src="/skins/common/wikibits.js?195"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins/common/ajax.js?195"></script>
		<script type="text/javascript" src="/skins/common/ajaxwatch.js?195"></script>
		<script type="text/javascript" src="/index.php?title=-&amp;action=raw&amp;smaxage=0&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Chapter_7 skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
				<h1 id="firstHeading" class="firstHeading">Chapter 7</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From SphereWiki</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<div style="margin: 0px; padding: 2px 2px 0px 2px; border: none; border-collapse:collapse; clear:both;">
<span style="float:right; font-weight:normal; font-size: x-small;"><a href="/index.php/Wiki_Translation" title="Wiki Translation">Help</a></span><div style="background-color:#e9e9e9; border-style:solid; border-width:1px; border-color:#aaa; padding: 0pt 4pt 8pt 4pt; font-size: 95%; text-align:center;"><b>Available languages</b></div>
<div style="border: 1px solid #aaa; background-color: #f9f9f9; border-collapse:collapse; font-size: 95%; padding: 2pt 4pt 2pt 4pt; margin: 0px;">          • <span lang="en"><strong class="selflink">English</strong></span>                                         
</div>
</div>
<div class="NavFrame" style="border:none; clear:none; margin: 0px; padding-top: 0px;">
<div class="NavHead" style="background-color:#e9e9e9; border-style:solid; border-width:1px; border-color:#aaa; margin: 0px; padding: 0pt 4pt 8pt 4pt; font-size: 95%;"><b>Missing languages</b></div>
<div class="NavContent" style="border: 1px solid #aaa; background-color: #f9f9f9; border-collapse:collapse; font-size: 95%; padding: 2pt 4pt 2pt 4pt;">        • <span lang="de"><a href="/index.php?title=De:Chapter_7&amp;action=edit&amp;redlink=1" class="new" title="De:Chapter 7 (page does not exist)">Deutsch</a></span>    • <span lang="es"><a href="/index.php?title=Es:Chapter_7&amp;action=edit&amp;redlink=1" class="new" title="Es:Chapter 7 (page does not exist)">Español</a></span>    • <span lang="fr"><a href="/index.php?title=Fr:Chapter_7&amp;action=edit&amp;redlink=1" class="new" title="Fr:Chapter 7 (page does not exist)">Français</a></span>           • <span lang="ja"><a href="/index.php?title=Ja:Chapter_7&amp;action=edit&amp;redlink=1" class="new" title="Ja:Chapter 7 (page does not exist)">日本語</a></span>                  • <span lang="tr"><a href="/index.php?title=Tr:Chapter_7&amp;action=edit&amp;redlink=1" class="new" title="Tr:Chapter 7 (page does not exist)">Türkçe</a></span>     
</div>
</div><div class="NavFrame" style="border:none;display:none;"></div>
<p><br />
</p>
<table id="toc" class="toc" summary="Contents"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1"><a href="#Recursive_Functions"><span class="tocnumber">1</span> <span class="toctext">Recursive Functions</span></a></li>
<li class="toclevel-1"><a href="#FOR"><span class="tocnumber">2</span> <span class="toctext">FOR</span></a>
<ul>
<li class="toclevel-2"><a href="#FOR_2"><span class="tocnumber">2.1</span> <span class="toctext">FOR</span></a></li>
<li class="toclevel-2"><a href="#FORCHARLAYER"><span class="tocnumber">2.2</span> <span class="toctext">FORCHARLAYER</span></a></li>
<li class="toclevel-2"><a href="#FORCHARMEMORYTYPE"><span class="tocnumber">2.3</span> <span class="toctext">FORCHARMEMORYTYPE</span></a></li>
<li class="toclevel-2"><a href="#FORCHARS"><span class="tocnumber">2.4</span> <span class="toctext">FORCHARS</span></a></li>
<li class="toclevel-2"><a href="#FORCLIENTS.2C_FORPLAYERS"><span class="tocnumber">2.5</span> <span class="toctext">FORCLIENTS, FORPLAYERS</span></a></li>
<li class="toclevel-2"><a href="#FORCONT"><span class="tocnumber">2.6</span> <span class="toctext">FORCONT</span></a></li>
<li class="toclevel-2"><a href="#FORCONTID"><span class="tocnumber">2.7</span> <span class="toctext">FORCONTID</span></a></li>
<li class="toclevel-2"><a href="#FORCONTTYPE"><span class="tocnumber">2.8</span> <span class="toctext">FORCONTTYPE</span></a></li>
<li class="toclevel-2"><a href="#FORINSTANCES"><span class="tocnumber">2.9</span> <span class="toctext">FORINSTANCES</span></a></li>
<li class="toclevel-2"><a href="#FORITEMS"><span class="tocnumber">2.10</span> <span class="toctext">FORITEMS</span></a></li>
<li class="toclevel-2"><a href="#FOROBJS"><span class="tocnumber">2.11</span> <span class="toctext">FOROBJS</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#WHILE"><span class="tocnumber">3</span> <span class="toctext">WHILE</span></a></li>
<li class="toclevel-1"><a href="#TRY"><span class="tocnumber">4</span> <span class="toctext">TRY</span></a>
<ul>
<li class="toclevel-2"><a href="#TRY_2"><span class="tocnumber">4.1</span> <span class="toctext">TRY</span></a></li>
<li class="toclevel-2"><a href="#TRYP"><span class="tocnumber">4.2</span> <span class="toctext">TRYP</span></a></li>
<li class="toclevel-2"><a href="#TRYSRC"><span class="tocnumber">4.3</span> <span class="toctext">TRYSRC</span></a></li>
<li class="toclevel-2"><a href="#TRYSRV"><span class="tocnumber">4.4</span> <span class="toctext">TRYSRV</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#SERV"><span class="tocnumber">5</span> <span class="toctext">SERV</span></a>
<ul>
<li class="toclevel-2"><a href="#CHARDEF"><span class="tocnumber">5.1</span> <span class="toctext">CHARDEF</span></a></li>
<li class="toclevel-2"><a href="#ITEMDEF"><span class="tocnumber">5.2</span> <span class="toctext">ITEMDEF</span></a></li>
<li class="toclevel-2"><a href="#LOG"><span class="tocnumber">5.3</span> <span class="toctext">LOG</span></a></li>
<li class="toclevel-2"><a href="#MAP"><span class="tocnumber">5.4</span> <span class="toctext">MAP</span></a></li>
<li class="toclevel-2"><a href="#NEWDUPE"><span class="tocnumber">5.5</span> <span class="toctext">NEWDUPE</span></a></li>
<li class="toclevel-2"><a href="#NEWITEM"><span class="tocnumber">5.6</span> <span class="toctext">NEWITEM</span></a></li>
<li class="toclevel-2"><a href="#NEWNPC"><span class="tocnumber">5.7</span> <span class="toctext">NEWNPC</span></a></li>
<li class="toclevel-2"><a href="#SKILL"><span class="tocnumber">5.8</span> <span class="toctext">SKILL</span></a></li>
</ul>
</li>
</ul>
</td></tr></table><script type="text/javascript"> if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } </script>
<a name="Recursive_Functions" id="Recursive_Functions"></a><h2><span class="editsection">[<a href="/index.php?title=Chapter_7&amp;action=edit&amp;section=1" title="Edit section: Recursive Functions">edit</a>]</span> <span class="mw-headline">Recursive Functions</span></h2>
<p>I discovered this very seldom explored extension of SPHERE scripting while reading messages on the boards. Someone was trying to create a function that counted the number of items in a container using this sort of thing, and it worked for the most part. I was very amazed, because before that, no one had even thought of using functions that looped back upon themselves.
</p><p><br />
Which is what a recursive function is. I'll say it one more time.
</p><p><br />
A recursive function is one that calls itself, or recurs. Surprise!
</p><p><br />
So how do we do this? It's as simple as calling a function:
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">[FUNCTION recursive_test]
recursive_test
</pre>
<p><br />
This very small piece of code in fact IS a recursive function. As you can see, the function will call itself and start over from the beginning, which will proceed to call the function again, and again, and again, and on and on. In this case, we don't have any way to stop it. This is called an infinite loop, one that will continue forever without stopping. Your server will die a flaming death.
</p><p><br />
</p><p><b>Lesson 1: How to NOT create an infinite loop</b>
</p><p>Let me tell you right now. You will write a script that implements an infinite loop. You will test it. Your server will die. It's guaranteed. No programmer can say that they have never accidentally written an infinite loop. (RANDOM NOTE: All windows programs are in fact infinite loops. Your SPHERE server is an infinite loop.) In a SPHERE script, however, here's what happens:
</p>
<ol><li> The function is called.
</li><li> Some stuff takes place
</li><li> The function is called from within itself. Being a good scripting language, it records where it left off so it can go back later. This is called the stack.
</li><li> Go back to number 1.
</li></ol>
<p>This "stack" builds up very very quickly, and soon the server cannot allocate any more memory for it, and will crash when it tries. Fun stuff, I tell you.
</p><p><br />
Anyways, here is one way to avoid creating an infinite loop. Let's say we want to make a function that executes SRC.SYSMESSAGE Hello World 35 times. Here would be an example of how one could do this:
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">[FUNCTION recurse_hello]
IF (&lt;ARGN1&gt; &lt; 1)
    RETURN 1
ENDIF
SYSMESSAGE Hello World
RECURSE_HELLO &lt;EVAL &lt;ARGN1&gt; - 1&gt;
RETURN 1
</pre>
<p><br />
Then, in another script, we would execute this command: <font color="darkred">SRC.RECURSE_HELLO 35</font>
</p><p><br />
Remember what ARGN is from the previous chapter? It's the argument to the function stored as a number. Initially, as you can see, it's 25 because we made it be that way. However, every time the function calls itself, or "recurses", it sets ARGN1 to be one less than itself. Here's the step-by-step analysis of this:
</p>
<ol><li> The function is called. ARGN1 is 35 because we said so.
</li><li> It checks to see if ARGN1 is less than one. If it is, we immediately RETURN 1 and set off the chain reaction that stops the recursive function.
</li><li> The next part should be fairly obvious. We're sending a SYSMESSAGE to the default object. Because we used SRC when we initially called the function, the default object is SRC.
</li><li> This is where the recursion takes place. The function calls itself with an argument ONE LESS than the current one. This starts the whole thing over at step 1. This is a NEW FUNCTION CALL, remember. The original function call STILL EXISTS and the program will "rewind" back down the stack to that location later. That is why I have a RETURN 1 after the function call.
</li></ol>
<p><br />
That's your example of a recursive function. It isn't very practical. Let's look at a more practical example. See if you can figure it out for yourself. This is courtesy of Belgar, for the most part:
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">[FUNCTION pack_to_bank]
IF (&lt;FINDLAYER.21.FINDCONT.0.UID&gt; == 0)
    RETURN 1
ENDIF
FINDLAYER.21.FINDCONT.0.CONT = &lt;FINDLAYER.layer_bankbox.UID&gt;
PACK_TO_BANK
RETURN 1
</pre>
<p><br />
(As you can see, we don't always need an ARGS to make a function loop. In this case, we use a backpack with an unknown number of items inside and only stop when the pack no longer contains items.)
</p><p><br />
Recursive functions are very useful. Be sure you don't overuse them, though! Remember, while a script is running, YOUR SERVER IS FROZEN. If a recursive function takes too long to complete, your server will lag. A good method is to make sure that no function should be looping more than about 500 times. (Actually other server emulators such as POL have a mechanism to catch "runaway scripts" like this and halt them in their tracks.)
</p><p><br />
</p>
<a name="FOR" id="FOR"></a><h2><span class="editsection">[<a href="/index.php?title=Chapter_7&amp;action=edit&amp;section=2" title="Edit section: FOR">edit</a>]</span> <span class="mw-headline">FOR</span></h2>
<a name="FOR_2" id="FOR_2"></a><h3><span class="editsection">[<a href="/index.php?title=Chapter_7&amp;action=edit&amp;section=3" title="Edit section: FOR">edit</a>]</span> <span class="mw-headline">FOR</span></h3>
<p>FOR is a powerful way to create a recursive function, and it allows a simpler level of control over your recursions. 
</p><p>Usage:
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">[FUNCTION for_display]
FOR X 1 20
    SYSMESSAGE &lt;LOCAL.X&gt; //Will sysmessage the current for count.
ENDFOR
</pre>
<p><br />
The loop will loop through 20 times, starting at 1 and ending at 20. X is the variable containing the current FOR count. If no variable is declared, the count can be accessed using &lt;LOCAL._FOR&gt;
</p><p><br />
Changing LOCAL._FOR or whatever you declared as count, will not change the loop's behaviour. But be aware that if you "stack" FOR loops without giving them different loop variables, the innermost loop will overwrite the loop variables of its successors, usually leading towards a completely messup of the whole loop stuff.
</p><p><br />
</p>
<a name="FORCHARLAYER" id="FORCHARLAYER"></a><h3><span class="editsection">[<a href="/index.php?title=Chapter_7&amp;action=edit&amp;section=4" title="Edit section: FORCHARLAYER">edit</a>]</span> <span class="mw-headline">FORCHARLAYER</span></h3>
<p>FORCHARLAYER is another type of FOR loop. Basically it allows you to loop through each item that is stored on the specified layer of a character. This can be useful for when you want to manipulate all of the spell runes or memory items on a character as an alternative to using FINDLAYER.x in a loop.
</p><p><br />
Something to be aware of here is that whilst inside the loop, the default object will be temporarily changed to the item in the loop. As you can see in the following example, we must store a reference to the original default object (the character) so that we can still reference it from within the loop:
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">[FUNCTION get_mitems_names]
REF1 = &lt;UID&gt; // store the default object in REF1
FORCHARLAYER 30
    REF1.SYSMESSAGE &lt;NAME&gt; is a memory item in layer &lt;LAYER&gt;
ENDFOR
</pre>
<p><br />
</p>
<a name="FORCHARMEMORYTYPE" id="FORCHARMEMORYTYPE"></a><h3><span class="editsection">[<a href="/index.php?title=Chapter_7&amp;action=edit&amp;section=5" title="Edit section: FORCHARMEMORYTYPE">edit</a>]</span> <span class="mw-headline">FORCHARMEMORYTYPE</span></h3>
<p>FORCHARMEMORYTYPE is a very useful type of FOR loop. You may want to use it for experience systems, and some player and NPC killing systems. It loops through every memory item on a character that has a specified flag.
</p><p><br />
For example, a character has 4 memory items with the following names and flags:
</p>
<table>
<tr>
<td> Ellessar </td><td> 02000
</td></tr>
<tr>
<td> Sorea </td><td> 022bc
</td></tr>
<tr>
<td> Introvert </td><td> 0740d
</td></tr>
<tr>
<td> Enrath </td><td> 0c40d
</td></tr></table>
<p><b>Script:</b><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">[FUNCTION get_war_targ_mems]
REF1 = &lt;UID&gt; // As with FORCHARLAYER, the default object changes within the loop
FORCHARMEMORYTYPE memory_war_targ // Loop through memory items with flag 02000=memory_war_targ
    REF1.SYSMESSAGE There is a memory item with name &lt;NAME&gt;, uid &lt;UID&gt;, flags &lt;COLOR&gt; and one of its flag is also 02000.
ENDFOR
</pre>
<p><br />
<b>Result:</b><br />
On your screen you would see:
</p><p><i>There is a memory item with name Ellessar, uid 04f000001, flags 02000 and one of its flag is also 02000.</i><br />
<i>There is a memory item with name Sorea, uid 04f000002, flags 022bc and one of its flag is also 02000.</i><br />
<i>There is a memory item with name Introvert, uid 04f000003, flags 0740d and one of its flag is also 02000.</i><br />&lt;/tt&gt;
</p><p><br />
<b>Note that there are only three messages, because the memory item "Enrath" does not have the flag 02000.</b>
</p><p><br />
</p>
<a name="FORCHARS" id="FORCHARS"></a><h3><span class="editsection">[<a href="/index.php?title=Chapter_7&amp;action=edit&amp;section=6" title="Edit section: FORCHARS">edit</a>]</span> <span class="mw-headline">FORCHARS</span></h3>
<p>FORCHARS is a FOR loop that you can use to check all mobiles (player and NPC) within a set radius of an object.
</p><p><br />
The correct syntax being <i>FORCHARS x</i> where <i>x</i> is the radius in tiles the loop will cover.
</p>
<ul><li> <b>FORCHARS 2</b> would check any mobile within a 2 tile radius
</li><li> <b>FORCHARS 18</b> would check the area inside your screen
</li><li> <b>FORCHARS 6144</b> would check the entire world map
</li></ul>
<p><br />
One example of a function using FORCHARS
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">[FUNCTION kill_vendors]
FORCHARS 6144 // checks entire map
    IF (&lt;BRAIN&gt; == brain_vendor) //argument for what will be acted upon within this function
        KILL // action
    ENDIF
ENDFOR
</pre>
<p><br />
As with all FOR loops you have to stipulate inside the loop what it is to act upon, if you are restricting it to certian players/npcs (or in the case of FORITEMS, items) otherwise it will perform the action upon all players/npcs within the radius of the loop.
</p><p><br />
In this case the loop checks for any Vendor npc's and kills them.
</p><p><br />
</p>
<a name="FORCLIENTS.2C_FORPLAYERS" id="FORCLIENTS.2C_FORPLAYERS"></a><h3><span class="editsection">[<a href="/index.php?title=Chapter_7&amp;action=edit&amp;section=7" title="Edit section: FORCLIENTS, FORPLAYERS">edit</a>]</span> <span class="mw-headline">FORCLIENTS, FORPLAYERS</span></h3>
<p>FORCLIENTS and FORPLAYERS are FOR loops, both are used to affect a clients/players in certain radius. If you do not set the radius, radius 18 is used as default. While FORCLIENTS only acts on player characters who are logged in, FORPLAYERS acts on each and every player character, even if logged off.
</p><p><br />
<b>Usage:</b><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">[FUNCTION radius_players]
FORCLIENTS 25
    IF (&lt;ACCOUNT.PLEVEL&gt; &lt;= 1) // Affects only logged in players, not staff
        SAY I am here!
    ENDIF
ENDFOR
</pre>
<p><br />
</p>
<a name="FORCONT" id="FORCONT"></a><h3><span class="editsection">[<a href="/index.php?title=Chapter_7&amp;action=edit&amp;section=8" title="Edit section: FORCONT">edit</a>]</span> <span class="mw-headline">FORCONT</span></h3>
<p>FORCONT is a type of FOR loop. It loops through every item in a container. The default object inside the loop will be the item currently being looped over.
</p><p><br />
<b>Usage:</b><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">[FUNCTION rem_spellbooks]
FORCONT &lt;FINDLAYER.21.UID&gt; 10 // &lt;FINDLAYER.21.UID&gt; - UID of a container, 10 - how many subcontainers the function goes through, if set 0, it affects only items in container with UID
    IF (&lt;BASEID&gt; == i_spellbook)
        REMOVE
    ENDIF
ENDFOR
</pre>
<p><br />
</p>
<a name="FORCONTID" id="FORCONTID"></a><h3><span class="editsection">[<a href="/index.php?title=Chapter_7&amp;action=edit&amp;section=9" title="Edit section: FORCONTID">edit</a>]</span> <span class="mw-headline">FORCONTID</span></h3>
<p>FORCONTID is a FOR loop that works in a similar way to FORCONT, except that it will only cycle through items that have a specific BASEID. You can set the amount of subcontainers to loop through, like the FORCONT example.
</p><p><br />
<b>Usage:</b><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">[FUNCTION rem_spellbooks2]
FORCONTID i_spellbook 10
    REMOVE
ENDFOR
</pre>
<p><br />
</p>
<a name="FORCONTTYPE" id="FORCONTTYPE"></a><h3><span class="editsection">[<a href="/index.php?title=Chapter_7&amp;action=edit&amp;section=10" title="Edit section: FORCONTTYPE">edit</a>]</span> <span class="mw-headline">FORCONTTYPE</span></h3>
<p>This is another FOR loop that is almost identical to FORCONTYPE. The only difference is that instead of looping through items with a specific BASEID, it will loop through items with a specific TYPE. Following the spellbooks remover example:
</p><p><br />
<b>Usage:</b><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">[FUNCTION rem_spellbook3]
FORCONTTYPE t_spellbook
    REMOVE
ENDFOR
</pre>
<p><br />
</p>
<a name="FORINSTANCES" id="FORINSTANCES"></a><h3><span class="editsection">[<a href="/index.php?title=Chapter_7&amp;action=edit&amp;section=11" title="Edit section: FORINSTANCES">edit</a>]</span> <span class="mw-headline">FORINSTANCES</span></h3>
<p>You may have seen scripts that do something like the following:
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">[FUNCTION removespawns]
FORITEMS 9999
    IF (&lt;BASEID&gt; == i_worldgem_bit)
        REMOVE
    ENDIF
ENDFOR
</pre>
<p><br />
At a glance this script looks like a fairly useful script that can be used to remove all of your i_worldgem_bit (spawn) items from the server. If you attempt to run it you will most certainly notice that your server pauses for a signicantly long time (on a well-populated server you may even end up waiting a whole minute for the script to run), even if you only have several instances of the item on the server! The reason that this happens is because <i>FORITEMS 9999</i> will loop through <i>every</i> item within the 9999 tile radius, so the code will be looping hundreds or thousands of times when you only wanted to affect a handful of items!
</p><p><br />
To resolve this issue we have FORINSTANCES. This is a special loop which will loop through all instances of a given character or item BASEID that exist on the server. This offers the following advantages over using <i>FORITEMS/FORCHARS 9999</i>:
</p>
<ul><li> Sphere will only run your script for objects with the BASEID you are interested in.
</li><li> Sphere knows how many instances of the object exist, so can abort the loop at an appropriate time.
</li><li> Items inside containers (e.g. character backpacks or player banks) will not be missed out.
</li></ul>
<p><br />
So with this in mind, the above script can be rewritten to the following:
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">[FUNCTION removespawns]
FORINSTANCES i_worldgem_bit
    REMOVe
ENDFOR
</pre>
<p><br />
Now when you run this script you should notice a significant drop in the execution time.
</p><p><br />
<b>Note:</b> Since Sphere still has to internally search for references to the objects you're after you may find that on well-populate servers there is still a noticable pause. If you need to use this kind of loop then you should do so sparingly, and if you need to regularly use this then you may wish to consider finding a more optimal way of implementing your script(s).
</p><p><br />
</p>
<a name="FORITEMS" id="FORITEMS"></a><h3><span class="editsection">[<a href="/index.php?title=Chapter_7&amp;action=edit&amp;section=12" title="Edit section: FORITEMS">edit</a>]</span> <span class="mw-headline">FORITEMS</span></h3>
<p>FORITEMS works in much the same way that FORCHARS does, except it checks for ITEMS within the set radius as opposed to characters. Default obejct is set to the item which can be affected.
</p><p><br />
A basic example of a function using FORITEMS:
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">[FUNCTION Spawn_remover]
FORITEMS 6144 //once again it checks the entire map
    IF (&lt;TYPE&gt; == t_spawn_char) //if this arguement is met
        REMOVE //remove it
    ENDIF //end the IF arguement
ENDFOR //end the FOR loop
</pre>
<p><br />
</p>
<a name="FOROBJS" id="FOROBJS"></a><h3><span class="editsection">[<a href="/index.php?title=Chapter_7&amp;action=edit&amp;section=13" title="Edit section: FOROBJS">edit</a>]</span> <span class="mw-headline">FOROBJS</span></h3>
<p>FOROBJS works in the same way that FORITEMS and FORCHARS does with the exception that this loop will find both characters <b>AND</b> items within the specified radius.
</p><p><br />
</p>
<a name="WHILE" id="WHILE"></a><h2><span class="editsection">[<a href="/index.php?title=Chapter_7&amp;action=edit&amp;section=14" title="Edit section: WHILE">edit</a>]</span> <span class="mw-headline">WHILE</span></h2>
<p>WHILE is a <i>conditional loop</i>, a block of code that will repeat itself whilst a given condition is true. Basically you can think of this as being an IF..ENDIF block that will run indefinately until the IF statement returns false.
</p><p><br />
<b>ALWAYS AND ALWAYS:</b>
</p>
<ol><li> End WHILE blocks with ENDWHILE.
</li><li> Perform some action within the WHILE block that will change the outcome of the conditional statement.
</li></ol>
<p><br />
For example:
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">[FUNCTION remove_all_mems]
WHILE (&lt;FINDID.i_memory.UID&gt;)   // continue to loop whilst an i_memory item is found inside the object
FINDID.i_memory.REMOVE  // remove a memory item
ENDWHILE
</pre>
<p><br />
Whilst inside the loop, LOCAL._WHILE can be used to access the number of times that the script has looped so far. In some situations you may want to use this to impose a 'limit' on how many times your WHILE block can loop before it is forced to exit. An example of this could be:
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">[FUNCTION random_health]
WHILE (&lt;HITS&gt; &gt; 10) &amp;&amp; (&lt;LOCAL._WHILE&gt; &lt; 20)  // loop whilst the character has more than 10 health, but no more than 20 times
HITS = &lt;R1,100&gt;    // set the character's health to a random value between 1 and 100
ENDWHILE
</pre>
<p><br />
Since random numbers are.. random.. it is in theory possible that the health will never be set to a value less than or equal to 10. By checking LOCAL._WHILE inside the WHILE condition we add protection against the script looping indefinately and freezing the server.
</p><p><br />
</p>
<a name="TRY" id="TRY"></a><h2><span class="editsection">[<a href="/index.php?title=Chapter_7&amp;action=edit&amp;section=15" title="Edit section: TRY">edit</a>]</span> <span class="mw-headline">TRY</span></h2>
<a name="TRY_2" id="TRY_2"></a><h3><span class="editsection">[<a href="/index.php?title=Chapter_7&amp;action=edit&amp;section=16" title="Edit section: TRY">edit</a>]</span> <span class="mw-headline">TRY</span></h3>
<p>TRY can be used to execute a line of script where the left hand side (i.e. a property being set or a function being called) is based on the value of an expression.
</p><p><br />
For example, we may have the following script:
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">LOCAL.TEST = 05
SRC.TAG0.MYTAG_&lt;LOCAL.SOME&gt; = 1234
</pre>
<p><br />
Sphere will add a TAG named "MYTAG_&lt;LOCAL.SOME&gt;" with a value of "1234", when really we were hoping for "MYTAG_05". We can use TRY to accomplish this:
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">LOCAL.TEST = 05
TRY SRC.TAG0.MYTAG_&lt;LOCAL.SOME&gt; = 1234
</pre>
<p><br />
This causes Sphere to evaluate the entire line first, as "<tt>SRC.TAG0.MYTAG_05 = 1234</tt>" and then run it, giving us the "MYTAG_05" TAG as we were after.
</p><p><br />
<b>Note:</b> Since 27-11-2006 the TRY function has become obsolete. Sphere will now always evaluate the entire line before executing it.
</p><p><br />
</p>
<a name="TRYP" id="TRYP"></a><h3><span class="editsection">[<a href="/index.php?title=Chapter_7&amp;action=edit&amp;section=17" title="Edit section: TRYP">edit</a>]</span> <span class="mw-headline">TRYP</span></h3>
<p>This is the same as the TRY function, except that a PLEVEL parameter is also supplied. If SRC's PLEVEL is less than this value then the line will not be executed, for example:
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">TRYP 4 UID.&lt;TAG.CHARUID&gt;.NAME Yerk
</pre>
<p><br />
The above line will not be executed if SRC's PLEVEL is less than 4, so it will not run for players but it will to GM and above. This is almost the same as writing:
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">IF (&lt;SRC.ACCOUNT.PLEVEL&gt; &gt;= 4)
    UID.&lt;TAG.CHARUID&gt;.NAME Yerk
ENDIF
</pre>
<p>However, with TRYP the line will also run if there is no SRC (in an @Timer trigger, for example). So a more accurate scripted equivalent would be:
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">IF&nbsp;!(&lt;SRC&gt;)
    TRY UID.&lt;TAG.CHARUID&gt;.NAME Yerk
ELSEIF (&lt;SRC.ACCOUNT.PLEVEL&gt; &gt;= 4)
    TRY UID.&lt;TAG.CHARUID&gt;.NAME Yerk
ENDIF
</pre>
<p><br />
</p>
<a name="TRYSRC" id="TRYSRC"></a><h3><span class="editsection">[<a href="/index.php?title=Chapter_7&amp;action=edit&amp;section=18" title="Edit section: TRYSRC">edit</a>]</span> <span class="mw-headline">TRYSRC</span></h3>
<p>As already mentioned in a previous chapter, the TRYSRC function can be used to override the SRC object for a given line.
</p><p><br />
The syntax for this function is <tt>TRYSRC uid command</tt>, where <tt>uid</tt> is the UID of the character who you want to become SRC, and <tt>command</tt> is the command you want to execute.
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">ON=@Timer
    // place 5000 gold coins in LINK's backpack
    SERV.NEWITEM i_gold
    NEW.AMOUNT = 5000
    TRYSRC &lt;LINK.UID&gt; NEW.BOUNCE // the BOUNCE function places an item into SRC's backpack
    RETURN 1
</pre>
<p><br />
</p>
<a name="TRYSRV" id="TRYSRV"></a><h3><span class="editsection">[<a href="/index.php?title=Chapter_7&amp;action=edit&amp;section=19" title="Edit section: TRYSRV">edit</a>]</span> <span class="mw-headline">TRYSRV</span></h3>
<p>TRYSRV is similar to the TRYSRC command except that rather than running a command with a specific character as SRC, the command is instead executed with SRC set to the SERV object.
</p><p><br />
This can be desirable in the following situations:
</p>
<ul><li> Certain properties of accounts, such as passwords, are protected against being accessed unless SRC has a PLEVEL of 7 (owner). It would be incredibly dangerous and unwise to set a player's PLEVEL to 7, even temporarily, but the SERV object is always considered to have a PLEVEL of 7.
</li><li> Certain functions/commands behave differently with a character as SRC, for example:
<ul><li> SERV.NEWNPC will automatically set the new NPC's position to beside the SRC character. By using <tt>TRYSRV SERV.NEWNPC</tt> you can avoid players seeing an NPC 'flicker' on and off their screen.
</li></ul>
</li></ul>
<p><br />
</p>
<a name="SERV" id="SERV"></a><h2><span class="editsection">[<a href="/index.php?title=Chapter_7&amp;action=edit&amp;section=20" title="Edit section: SERV">edit</a>]</span> <span class="mw-headline">SERV</span></h2>
<a name="CHARDEF" id="CHARDEF"></a><h3><span class="editsection">[<a href="/index.php?title=Chapter_7&amp;action=edit&amp;section=21" title="Edit section: CHARDEF">edit</a>]</span> <span class="mw-headline">CHARDEF</span></h3>
<p>Let's say you wanted to retrieve the DAM property from, say, a Liche. Because DAM isn't a character property, we can only get the property from the CHARDEF. (Technically, there is a DAM property for characters, but it is not what we're looking for.)
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">[FUNCTION f_return_char_prop]
LOCAL.DAM = &lt;SERV.CHARDEF.&lt;ARGS&gt;.DAM&gt;
</pre>
<p><br />
With the above example, Sphere will take the argument passed (ARGS), then try to store the DAM property from the corresponding CHARDEF into LOCAL.DAM.
</p><p><br />
Pretty simple, right? 
</p><p><br />
</p>
<a name="ITEMDEF" id="ITEMDEF"></a><h3><span class="editsection">[<a href="/index.php?title=Chapter_7&amp;action=edit&amp;section=22" title="Edit section: ITEMDEF">edit</a>]</span> <span class="mw-headline">ITEMDEF</span></h3>
<p>This works similar to SERV.CHARDEF, only it works on ITEMDEFs. Let's say you wanted to get the SKILL property from a character's equipped weapon.
</p><p><br />
Here's an example: 
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">[FUNCTION f_return_wep_skill]
LOCAL.WEP_SKILL = &lt;SERV.ITEMDEF.&lt;ARGS&gt;.SKILL&gt;
</pre>
<p><br />
That would store the SKILL property of whatever ITEMDEF passed (ARGS) into LOCAL.WEP_SKILL. And this can get much more complex. As an example, I recently wrote a script that does the following:
</p>
<ul><li> Use QVAL to find the equipped weapon. 
</li><li> Store the weapon found in REF1. 
</li><li> Check to see if REF1 returned a weapon UID. 
</li><li> Store the DAM property for the weapon in LOCAL.WEP_DAM. 
</li></ul>
<p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">[FUNCTION f_weapon_dam]
REF1 = &lt;QVAL &lt;FINDLAYER.1.UID&gt;&nbsp;? &lt;FINDLAYER.1.UID&gt;&nbsp;: &lt;FINDLAYER.2.UID&gt;&gt;
IF (&lt;REF1&gt;) // REF1 is true; weapon found.
    LOCAL.WEP_DAM = &lt;SERV.ITEMDEF.&lt;REF1.BASEID&gt;.DAM&gt;
ENDIF
RETURN &lt;LOCAL.WEP_DAM&gt;
</pre>
<p><br />
That's not too complex, is it? 
</p><p><br />
</p>
<a name="LOG" id="LOG"></a><h3><span class="editsection">[<a href="/index.php?title=Chapter_7&amp;action=edit&amp;section=23" title="Edit section: LOG">edit</a>]</span> <span class="mw-headline">LOG</span></h3>
<p>This functions is very good if you want to see when a player makes something or say something or when want to know the result of formulas in your scripts. This, is for writing messages onto the console (and logs). It is really simple to use:
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">SERV.LOG Hi world
</pre>
<p><br />
And when you look at console it shows something like:
</p><p><br />
</p>
<pre style="color: darkgreen; font-family: monospace; border: none;">21:56:(YourScript.scp,2)Hi world
</pre>
<p><br />
Easy and useful.
</p><p><br />
<b>Note:</b> If for some reason you don't want the script name to appear in the log, prefix your log message with the '@' character (prefix the message with two '@' characters (@@) if you actually want to start the message with the @ symbol.
</p><p><br />
</p>
<a name="MAP" id="MAP"></a><h3><span class="editsection">[<a href="/index.php?title=Chapter_7&amp;action=edit&amp;section=24" title="Edit section: MAP">edit</a>]</span> <span class="mw-headline">MAP</span></h3>
<p>The SERV.MAP function allows you to read the properties of a specific point on a map. There are two syntaxes that can be used:
</p>
<ol><li> <tt>&lt;SERV.MAP(x,y,map)&gt;.KEY</tt>
</li><li> <tt>&lt;SERV.MAP(x,y,z,map)&gt;.KEY</tt>
</li></ol>
<p><br />
You may notice a slight 'peculiarity' in these syntaxes and you should be aware of them so that they don't catch you out: When there are 3 parameters given, the third parameter is used as the map number to access. When 4 parameters are given, the third parameter is the height (Z) and the fourth becomes the map number.
</p><p><br />
The KEY can be a number of things:
</p>
<table>

<tr>
<td> ISNEARTYPE type distance checkmulti </td><td> Returns 1 if an item exists near the point within &lt;distance&gt; tiles. If &lt;checkmulti&gt; is 1 then multi components will also be checked.
</td></tr>
<tr>
<td> REGION </td><td> Access the REGION at the map point.
</td></tr>
<tr>
<td> ROOM </td><td> Access the ROOM at the map point.
</td></tr>
<tr>
<td> SECTOR </td><td> Access the SECTOR at the map point.
</td></tr>
<tr>
<td> STATICS </td><td> The number of static items at the map point.
</td></tr>
<tr>
<td> STATICS.n.ID </td><td> The ID of the nth static item at the map point (n starts at 0)
</td></tr>
<tr>
<td> STATICS.n.COLOR </td><td> The COLOR of the nth static item at the map point (n starts at 0)
</td></tr>
<tr>
<td> STATICS.n.Z </td><td> The Z level of the nth static item at the map point (n starts at 0)
</td></tr>
<tr>
<td> STATICS.n.* </td><td> If the STATICS.n.KEY does not match any of the above properties, the value will be taken from the static's ITEMDEF in the scripts
</td></tr>
<tr>
<td> TERRAIN </td><td> The ID of the terrain at the map point.
</td></tr>
<tr>
<td> TYPE </td><td> The type of terrain at the map point.
</td></tr>
<tr>
<td> X, Y, Z, M, MAP </td><td> Access the X/Y/Z/MAP values at the map point.
</td></tr></table>
<p><br />
</p>
<a name="NEWDUPE" id="NEWDUPE"></a><h3><span class="editsection">[<a href="/index.php?title=Chapter_7&amp;action=edit&amp;section=25" title="Edit section: NEWDUPE">edit</a>]</span> <span class="mw-headline">NEWDUPE</span></h3>
<p>When you use the <font color="darkred">.DUPE</font> command you can create a 'clone' of a targeted item. The NEWDUPE function allows this functionality to be reproduced within scripts.
</p><p><br />
The syntax of the function is <tt>NEWDUPE uid</tt>, where uid is the UID of the object you want to clone. After running this function, the SERV.NEW reference will be set to the newly cloned item.
</p><p><br />
Here is an example, the script below will clone the character's weapon and place it in their backpack:
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">[FUNCTION f_dupeweapon]
IF (&lt;WEAPON.UID&gt;)
    SERV.NEWDUPE &lt;WEAPON&gt;
    BOUNCE &lt;NEW.UID&gt;
ENDIF
</pre>
<p><br />
</p>
<a name="NEWITEM" id="NEWITEM"></a><h3><span class="editsection">[<a href="/index.php?title=Chapter_7&amp;action=edit&amp;section=26" title="Edit section: NEWITEM">edit</a>]</span> <span class="mw-headline">NEWITEM</span></h3>
<p>This is an easy function, used to create items. Many of you learned in 55i tutorials the format of NEWITEM, well, this changed on 56b and this is mainly to explain that change.
</p><p><br />
Now, you can't use this function on some player, you have to create it on SERV. Also, the reference to the new item isn't SRC.ACT anymore. It changed to NEW, so, if i want to create an item with the color 9, it will look like this:
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">SERV.NEWITEM i_example
NEW.COLOR 9
</pre>
<p><br />
As you can see, it is really easy to use. There are also additional parameters that can be optionally passed into NEWITEM:
</p><p><br />
<tt>NEWITEM id, amount, cont</tt>
</p><p><br />
So if I want to create 3 i_test in SRC's backpack I should do:
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">SERV.NEWITEM i_test, 3, &lt;SRC.FINDLAYER.21.UID&gt;
</pre>
<p><br />
Easy, uh? 
</p><p><br />
</p>
<a name="NEWNPC" id="NEWNPC"></a><h3><span class="editsection">[<a href="/index.php?title=Chapter_7&amp;action=edit&amp;section=27" title="Edit section: NEWNPC">edit</a>]</span> <span class="mw-headline">NEWNPC</span></h3>
<p>This function can be used to create NPCs in the world. The syntax is <tt>NEWNPC id</tt>, where <tt>id</tt> is the BASEID of the character you wish to create. The newly created character can be accessed via the NEW reference.
</p><p><br />
The following function creates a headless and moves it to within 10 tiles of the default object.
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">[FUNCTION f_createnpc]
SERV.NEWNPC c_headless
NEW.MOVENEAR &lt;UID&gt; 10
</pre>
<p><br />
<b>Note</b> It is also possible to create player characters this way, by setting the ACCOUNT property after creating the new character.
</p><p><br />
</p>
<a name="SKILL" id="SKILL"></a><h3><span class="editsection">[<a href="/index.php?title=Chapter_7&amp;action=edit&amp;section=28" title="Edit section: SKILL">edit</a>]</span> <span class="mw-headline">SKILL</span></h3>
<p>Well, this is an easy function, like the others. This one refers to the SKILL section.
</p><p><br />
You can see the skill properties in sphere_skills.scp. I'll explain how it works:
</p><p><br />
</p>
<pre style="color: darkblue; font-family: monospace; border: none;">LOCAL.SKILL = &lt;SERV.SKILL.&lt;ACTION&gt;.KEY&gt;
</pre>
<p><br />
With that line you get the Skill Key (Alchemy, ex.).
</p><p><br />
There are 3 ways to use SERV.SKILL: Key, Defname, Number.
</p><p><br />
Any of them are accepted, and if you see, in most of the cases people use Action to get the Key and get the player skill amount.
</p><p><br />
You can find many uses for it, all you need is some imagination.
</p>
<!-- 
NewPP limit report
Preprocessor node count: 408/1000000
Post-expand include size: 3359/2097152 bytes
Template argument size: 593/2097152 bytes
Expensive parser function count: 8/100
-->

<!-- Saved in parser cache with key d00b020c:pcache:idhash:9-0!1!0!!en!2 and timestamp 20120714134514 -->
<div class="printfooter">
Retrieved from "<a href="http://wiki.sphere.torfo.org/index.php/Chapter_7">http://wiki.sphere.torfo.org/index.php/Chapter_7</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/index.php/Special:Categories" title="Special:Categories">Category</a>:&#32;<span dir='ltr'><a href="/index.php/Category:Tutorials" title="Category:Tutorials">Tutorials</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/index.php/Chapter_7" title="View the content page [c]" accesskey="c">Page</a></li>
				 <li id="ca-talk" class="new"><a href="/index.php?title=Talk:Chapter_7&amp;action=edit&amp;redlink=1" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/index.php?title=Chapter_7&amp;action=edit" title="You can edit this page.&#10;Please use the preview button before saving [e]" accesskey="e">Edit</a></li>
				 <li id="ca-history"><a href="/index.php?title=Chapter_7&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>
				 <li id="ca-move"><a href="/index.php/Special:MovePage/Chapter_7" title="Move this page [m]" accesskey="m">Move</a></li>
				 <li id="ca-watch"><a href="/index.php?title=Chapter_7&amp;action=watch" title="Add this page to your watchlist [w]" accesskey="w">Watch</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-userpage"><a href="/index.php/User:Ben" title="Your user page [.]" accesskey="." class="new">Ben</a></li>
				<li id="pt-mytalk"><a href="/index.php/User_talk:Ben" title="Your talk page [n]" accesskey="n" class="new">My talk</a></li>
				<li id="pt-preferences"><a href="/index.php/Special:Preferences" title="Your preferences">My preferences</a></li>
				<li id="pt-watchlist"><a href="/index.php/Special:Watchlist" title="The list of pages you are monitoring for changes [l]" accesskey="l">My watchlist</a></li>
				<li id="pt-mycontris"><a href="/index.php/Special:Contributions/Ben" title="List of your contributions [y]" accesskey="y">My contributions</a></li>
				<li id="pt-logout"><a href="/index.php?title=Special:UserLogout&amp;returnto=Chapter_7" title="Log out">Log out</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://wiki.sphere.torfo.org/images/SphereWiki.png);" href="/index.php/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/index.php/Special:Search" id="searchform"><div>
				<input id="searchInput" name="search" type="text" title="Search SphereWiki [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search the pages for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/index.php/Main_Page">Main Page</a></li>
				<li id="n-recentchanges"><a href="/index.php/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-randompage"><a href="/index.php/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li>
				<li id="n-SphereServer-Forum"><a href="http://www.sphereserver.net">SphereServer Forum</a></li>
				<li id="n-help"><a href="/index.php/Help:Contents" title="The place to find out">Help</a></li>
			</ul>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-Setting_Up_Sphere'>
		<h5>Setting Up Sphere</h5>
		<div class='pBody'>
			<ul>
				<li id="n-Where-To-Get-Sphere"><a href="/index.php/Where_to_get_Sphere">Where To Get Sphere</a></li>
				<li id="n-Installing-Sphere"><a href="/index.php/Installing_Sphere">Installing Sphere</a></li>
				<li id="n-Configuring-Sphere.ini"><a href="/index.php/Configuring_Sphere.ini">Configuring Sphere.ini</a></li>
			</ul>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-Reference_Compendium'>
		<h5>Reference Compendium</h5>
		<div class='pBody'>
			<ul>
				<li id="n-Definitions"><a href="/index.php/Category:Definitions">Definitions</a></li>
				<li id="n-Objects"><a href="/index.php/Category:Objects">Objects</a></li>
				<li id="n-Scripts"><a href="/index.php/Category:Scripts">Scripts</a></li>
			</ul>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-Tutorial_Chapters'>
		<h5>Tutorial Chapters</h5>
		<div class='pBody'>
			<ul>
				<li id="n-Chapter-One"><a href="/index.php/Chapter_1">Chapter One</a></li>
				<li id="n-Chapter-Two"><a href="/index.php/Chapter_2">Chapter Two</a></li>
				<li id="n-Chapter-Three"><a href="/index.php/Chapter_3">Chapter Three</a></li>
				<li id="n-Chapter-Four"><a href="/index.php/Chapter_4">Chapter Four</a></li>
				<li id="n-Chapter-Five"><a href="/index.php/Chapter_5">Chapter Five</a></li>
				<li id="n-Chapter-Six"><a href="/index.php/Chapter_6">Chapter Six</a></li>
				<li id="n-Chapter-Seven"><a href="/index.php/Chapter_7">Chapter Seven</a></li>
				<li id="n-Chapter-Eight"><a href="/index.php/Chapter_8">Chapter Eight</a></li>
				<li id="n-Chapter-Nine"><a href="/index.php/Chapter_9">Chapter Nine</a></li>
				<li id="n-Chapter-Ten"><a href="/index.php/Chapter_10">Chapter Ten</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/index.php/Special:WhatLinksHere/Chapter_7" title="List of all wiki pages that link here [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/index.php/Special:RecentChangesLinked/Chapter_7" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-specialpages"><a href="/index.php/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/index.php?title=Chapter_7&amp;printable=yes" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/index.php?title=Chapter_7&amp;oldid=685" title="Permanent link to this version of the page">Permanent link</a></li>			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 26 November 2010, at 16:18.</li>
					<li id="viewcount">This page has been accessed 7,928 times.</li>
					<li id="privacy"><a href="/index.php/SphereWiki:Privacy_policy" title="SphereWiki:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/index.php/SphereWiki:About" title="SphereWiki:About">About SphereWiki</a></li>
					<li id="disclaimer"><a href="/index.php/SphereWiki:General_disclaimer" title="SphereWiki:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Piwik -->
<script type="text/javascript">
var pkBaseURL = (("https:" == document.location.protocol) ? "https://sphere.torfo.org/piwik/" : "http://sphere.torfo.org/piwik/");
document.write(unescape("%3Cscript src='" + pkBaseURL + "piwik.js' type='text/javascript'%3E%3C/script%3E"));
</script><script type="text/javascript">
try {
var piwikTracker = Piwik.getTracker(pkBaseURL + "piwik.php", 4);
piwikTracker.trackPageView();
piwikTracker.enableLinkTracking();
} catch( err ) {}
</script>
<!-- End Piwik Tag -->
<!-- Served in 0.916 secs. --></body></html>
